#title Open Source Contribs
#desc  ls -l /dev/dim/projects

Please find here a listing of recent of maintained contributions I did to
Open Source software.  Most of them are available from my [[https://github.com/dimitri/][GitHub]] page.

	[[/pgsql][images/220px-Postgresql_elephant.svg.png]]

* PostgreSQL Contributions

The more I work with [[http://www.postgresql.org/][PostgreSQL]] (and that's a lot already), the more I like
depending on this software.  Years passing by, I've been working on more and
more features, extensions and client tools for it.

** Core PostgreSQL Feature

As of now, this list only contains my first PostgreSQL patch, implementing
[[http://www.postgresql.org/docs/9.1/static/extend-extensions.html][Extensions]] properly.  I have an [[tags/extensions][extension tag]] for articles on this blog
related to the feature.

** PostgreSQL Extensions

Those are code that you can load into your PostgreSQL instance to extend its
feature set.

*** Prefix

This is the =prefix_range= datatype and its optimized [[http://www.postgresql.org/docs/current/static/gist-implementation.html][GiST]] indexing (which led
me to write most of the documentation page linked here).  See the [[pgsql/prefix.html][prefix]]
page here and the [[tags/prefix.html][articles tagged prefix]] on this blog.

*** preprepare

The idea behind [[pgsql/preprepare.html][preprepare]] is to sort out all the named =PREPARE= statement
that your application needs to issue on the server-side, early when
accepting your connection, so that all the application has to care about is
to =EXECUTE= the queries.

*** debian packaging

I've been contributing to other extensions too, mainly on the debian
packaging of them, as you can see the [[http://qa.debian.org/developer.php?login=dim%40tapoueh.org][debian packages by Dimitri Fontaine]]
page at debian.

** PostgreSQL replication

I enjoy using [[pgsql/skytools.html][skytools]] for lots of my replication needs, either [[http://wiki.postgresql.org/wiki/Londiste_Tutorial][Londiste]] (I
wrote the [[http://wiki.postgresql.org/wiki/Londiste_Tutorial][londiste tutorial]], send me questions and improvement ideas) or
[[http://wiki.postgresql.org/wiki/SkyTools#walmgr][walmgr]].  I also [[http://tapoueh.org/blog/2011/04/11-some-notes-about-skytools3.html][reworked the whole packaging of Skytools 3.0]] and contributes
to the project as much as I can (packaging, documentation, bug reports,
[[tags/conferences.html][conferences]], etc).

** PostgreSQL client tools

I began contributing to PostgreSQL by doing some client side tools.  It all
began, really, with having to rewrite [[pgsql/pgloader.html][pgloader]] because we couldn't extend it
anymore: at the time it was written in [[http://www.tcl.tk/][TCL]], which is a fine programming
language but one that is not on my *portfolio*.

*** pgloader

[[pgsql/pgloader.html][pgloader]] allows you to load a plain data file into PostgreSQL while managing
the errors that you might have.  See the [[pgsql/pgloader.html][pgloader tutorial]] and the
[[tags/pgloader.html][articles tagged pgloader]] here.

*** pg_staging

How to turn your boring nightly backups into something useful everyday?
[[pgsql/pgstaging.html][pg_staging]] has an answer here.

	[[/emacs][images/emacs-logo.png]]

* Emacs Extensions

My working environment of choice is [[emacs/index.html][emacs]], and is so happens that it's also
my preferred text editor.

** el-get

This could be labeled as =apt-get= for [[emacs/index.html][emacs]].  Check out the [[emacs/el-get.html][el-get]]
description to make your mind about it, and you can also see all the
[[tags/el-get.html][articles tagged el-get]] on this blog.

** ClusterSSH for Emacs

After having used some earlier version [[http://sourceforge.net/apps/mediawiki/clusterssh/index.php?title=Main_Page][cssh]], I couldn't bear to wait that
much for its interface that I didn't like.  That's how I decided to learn
enough of [[http://www.gnu.org/software/emacs/emacs-lisp-intro/html_node/Preface.html#Preface][Emacs Lisp]] so that I could depend some more on [[emacs/index.html][emacs]].  That led to
[[emacs/cssh.html][cssh.el]] which I still use daily and maintain.

** Switch Window

This is a ***visual*** replacement for =C-x o=, check out the [[emacs/switch-window.html][switch-window]] page.

** Mailq

You will read here the details of my outgoing email setup, using
[[http://tapoueh.org/blog/2010/09/23-postfix-sender_dependent_relayhost_maps.html][postfix sender_dependent_relayhost_maps]].  The consequence is that I have to
sometime do =M-! mailq= to check that I don't have mails kept locally Then
what, open a local terminal so that you can *flush* the mail queue?

=M-x= [[emacs/mailq.html][mailq]] is an answer to that.  Not only it displays if you have to worry,
but it also allows to *flush* your mail queue directly from emacs with a
single keystroke.  Much better.

** rcirc-groups

That's a little add-on to follow =IRC= notification when using [[http://www.emacswiki.org/emacs/rcirc][rcirc]].
