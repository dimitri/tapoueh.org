<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>El Get on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>http://tapoueh.org/categories/el-get/</link>
    <description>Recent content in El Get on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jan 2014 21:34:00 +0100</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/categories/el-get/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>El-Get is now Rolling Releases</title>
      <link>http://tapoueh.org/blog/2014/01/el-get-is-now-rolling-releases/</link>
      <pubDate>Sat, 11 Jan 2014 21:34:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2014/01/el-get-is-now-rolling-releases/</guid>
      <description>The code of El-Get has been pretty stable for a long time now. About the whole set of patches against the 4.x series has been about bug fixing corner cases (sometimes cases that had nothing cornery about them too) and providing more and more recipes. That&amp;rsquo;s what you expect from a stable software, and that what allows us to move to a rolling releases model.
In practice, it means that you won&amp;rsquo;t have to suffer from using a badly maintained stable branch anymore.</description>
    </item>
    
    <item>
      <title>El-Get 4.1 is out</title>
      <link>http://tapoueh.org/blog/2012/08/el-get-4.1-is-out/</link>
      <pubDate>Tue, 28 Aug 2012 11:43:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2012/08/el-get-4.1-is-out/</guid>
      <description>Please welcome the new stable version of El-Get, the much awaited version 4.1 has now been branched for your pleasure. It&amp;rsquo;s packed with lots of features to make your life easy, comes with a Info documentation book and even has a logo. That&amp;rsquo;s no joke, I found one, at least:
Why El-Get is relevant Emacs 24.1 is the first release that includes package.el, and it even allows the user to setup several sources where to fetch packages.</description>
    </item>
    
    <item>
      <title>el-get-3.1</title>
      <link>http://tapoueh.org/blog/2011/09/el-get-3.1/</link>
      <pubDate>Fri, 16 Sep 2011 14:13:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/09/el-get-3.1/</guid>
      <description>The el-get project releases its new stable version, 3.1. This new release fixes bugs, add a host of new recipes (we have 420 of them and counting) and some nice new features too. You really want to upgrade.
New features Among the features you will find dependencies management and M-x el-get-list-packages, that you should try as soon as possible. Of course, don&amp;rsquo;t miss M-x el-get-self-update that eases the process somehow.</description>
    </item>
    
    <item>
      <title>Emacs Startup</title>
      <link>http://tapoueh.org/blog/2011/08/emacs-startup/</link>
      <pubDate>Sat, 06 Aug 2011 14:58:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/08/emacs-startup/</guid>
      <description>Using Emacs we get to manage a larger and larger setup file (either ~/.emacs or ~/.emacs.d/init.el), sometime with lots of dependencies, and some sub-files thanks to the load function or the provide and require mechanism.
Some users are even starting Emacs often enough for the startup time to be a concern. With an emacs-uptime (yes it&amp;rsquo;s a command, you can M-x emacs-uptime) of days to weeks ( 10 days, 17 hours, 45 minutes, 34 seconds as of this writing), it&amp;rsquo;s not something I really care about much.</description>
    </item>
    
    <item>
      <title>el-get 2.2</title>
      <link>http://tapoueh.org/blog/2011/05/el-get-2.2/</link>
      <pubDate>Thu, 26 May 2011 12:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/05/el-get-2.2/</guid>
      <description>We&amp;rsquo;ve spotted a little too late for our own taste a discrepancy in the source tree: a work in progress patch landed in git just before to release el-get stable. So we cleaned the tree (thanks again Julien), branched a stable maintenance tree, and released 2.2 from there.
You&amp;rsquo;re back to enjoying el-get :)</description>
    </item>
    
    <item>
      <title>el-get 2.1</title>
      <link>http://tapoueh.org/blog/2011/05/el-get-2.1/</link>
      <pubDate>Thu, 26 May 2011 10:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/05/el-get-2.1/</guid>
      <description>Current el-get status is stable, ready for daily use and packed with extra features that make life easier. There are some more things we could do, as always, but they will be about smoothing things further.
Latest released version el-get version 2.1 is available, with a boatload of features, including autoloads support, byte-compiling in an external clean room Emacs instance, custom support, lazy initialisation support (defering all init functions to eval-after-load), and multi repositories ELPA support.</description>
    </item>
    
    <item>
      <title>Emacs and PostgreSQL, PL line numbering</title>
      <link>http://tapoueh.org/blog/2011/04/emacs-and-postgresql-pl-line-numbering/</link>
      <pubDate>Sat, 23 Apr 2011 10:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/04/emacs-and-postgresql-pl-line-numbering/</guid>
      <description>A while ago I&amp;rsquo;ve been fixing and publishing pgsql-linum-format separately. That allows to number PL/whatever code lines when editing from Emacs, and it&amp;rsquo;s something very useful to turn on when debugging.
The carrets on the fringe in the emacs window are the result of (setq-default indicate-buffer-boundaries &#39;left) and here it&amp;rsquo;s just overloading the image somehow. But the idea is to just M-x linum-mode when you need it, at least that&amp;rsquo;s my usage of it.</description>
    </item>
    
    <item>
      <title>welcome el-get scratch installer</title>
      <link>http://tapoueh.org/blog/2010/08/welcome-el-get-scratch-installer/</link>
      <pubDate>Fri, 27 Aug 2010 14:15:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/welcome-el-get-scratch-installer/</guid>
      <description>A very good remark from some users: installing and managing el-get should be simpler. They wanted both an easy install of the thing, and a way to be able to manage it afterwards (like, update the local copy against the authoritative source). So I decided it was high time for getting the code out of my ~/.emacs.d git repository and up to a public place: http://github.com/dimitri/el-get.
Then, I added some documentation (a README), and then, a *scratch* installer, following great ideas from ELPA.</description>
    </item>
    
    <item>
      <title>el-get news</title>
      <link>http://tapoueh.org/blog/2010/08/el-get-news/</link>
      <pubDate>Thu, 26 Aug 2010 16:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/el-get-news/</guid>
      <description>I&amp;rsquo;ve been receiving some requests for el-get, some of them even included a patch. So now there&amp;rsquo;s support for bzr, CSV and http-tar, augmenting the existing support for git, git-svn, apt-get, fink and ELPA formats.
Also, as the install and even the build are completely asynchronous â€” there&amp;rsquo;s a pending bugfix for the building, which is now using start-process-shell-command. The advantage of doing so is that you&amp;rsquo;re free to use Emacs as usual while el-get is having your piece of elisp code compiled, which can take time.</description>
    </item>
    
  </channel>
</rss>