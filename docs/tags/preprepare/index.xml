<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Preprepare on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/preprepare/</link>
    <description>Recent content in Preprepare on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Aug 2009 09:14:00 +0200</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/preprepare/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hstore-new &amp; preprepare reach debian too</title>
      <link>https://tapoueh.org/blog/2009/08/hstore-new--preprepare-reach-debian-too/</link>
      <pubDate>Tue, 18 Aug 2009 09:14:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/08/hstore-new--preprepare-reach-debian-too/</guid>
      <description>It seems like debian developers are back from annual conference and holiday, so they have had a look at the NEW queue and processed the packages in there. Two of them were mines and waiting to get in unstable, hstore-new and preprepare.
Time to do some bug fixing already, as hstore-new packaging is using a bash&amp;rsquo;ism I shouldn&amp;rsquo;t rely on (or so the debian buildfarm is telling me) and for preprepare I was waiting for inclusion before to go improving the GUC management, stealing some code from Selena&amp;rsquo;s pgGearman :)</description>
    </item>
    
    <item>
      <title>prefix 1.0~rc2 in debian testing</title>
      <link>https://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</link>
      <pubDate>Mon, 03 Aug 2009 14:50:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</guid>
      <description>At long last, here it is. With binary versions both for postgresal-8.3 and postgresal-8.4! Unfortunately my other packaging efforts are still waiting on the NEW queue, but I hope to soon see hstore-new and preprepare enter debian too.
Anyway, the plan for prefix is to now wait something like 2 weeks, then, baring showstopper bugs, release the 1.0 final version. If you have a use for it, now is the good time for testing it!</description>
    </item>
    
    <item>
      <title>Prepared Statements and pgbouncer</title>
      <link>https://tapoueh.org/blog/2009/05/prepared-statements-and-pgbouncer/</link>
      <pubDate>Thu, 14 May 2009 00:00:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/05/prepared-statements-and-pgbouncer/</guid>
      <description>On the performance mailing list, a recent thread drew my attention. It devired to be about using a connection pool software and prepared statements in order to increase scalability of PostgreSQL when confronted to a lot of concurrent clients all doing simple select queries. The advantage of the pooler is to reduce the number of backends needed to serve the queries, thus reducing PostgreSQL internal bookkeeping. Of course, my choice of software here is clear: PgBouncer is an excellent top grade solution, performs real well (it won&amp;rsquo;t parse queries), reliable, flexible.</description>
    </item>
    
  </channel>
</rss>