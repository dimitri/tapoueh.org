<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generate_series on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/generate_series/</link>
    <description>Recent content in Generate_series on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jun 2017 14:35:59 +0200</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/generate_series/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PostgreSQL and the calendar</title>
      <link>https://tapoueh.org/blog/2017/06/postgresql-and-the-calendar/</link>
      <pubDate>Fri, 30 Jun 2017 14:35:59 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2017/06/postgresql-and-the-calendar/</guid>
      <description>&lt;p&gt;The modern calendar is a trap for the young engineer&amp;rsquo;s mind. We deal with
the calendar on a daily basis and until exposed to its insanity it&amp;rsquo;s rather
common to think that calendar based computations are easy. That&amp;rsquo;s until
you&amp;rsquo;ve tried to do it once. A very good read about how the current calendar
came to be the way it is now is Erik&amp;rsquo;s
Naggum &lt;a href=&#34;http://naggum.no/lugm-time.html&#34;&gt;The Long, Painful History of Time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Find The Missing Integer</title>
      <link>https://tapoueh.org/blog/2017/05/find-the-missing-integer/</link>
      <pubDate>Tue, 30 May 2017 19:56:54 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2017/05/find-the-missing-integer/</guid>
      <description>&lt;p&gt;A recent interview question that I had to review was spelled like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find missing int element into array 1..100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course at first read I got it wrong, you have only one integer to look
for into the array. So while the obvious idea was to apply classic &lt;em&gt;sorting&lt;/em&gt;
techniques and minimize array traversal to handle complexity (time and
space), it turns out there&amp;rsquo;s a much simpler way to do it if you remember
your math lessons from younger. But is it that much simpler?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>