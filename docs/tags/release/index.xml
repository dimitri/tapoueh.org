<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Release on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>http://tapoueh.org/tags/release/</link>
    <description>Recent content in Release on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Aug 2012 11:43:00 +0200</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/release/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>El-Get 4.1 is out</title>
      <link>http://tapoueh.org/blog/2012/08/el-get-4.1-is-out/</link>
      <pubDate>Tue, 28 Aug 2012 11:43:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2012/08/el-get-4.1-is-out/</guid>
      <description>Please welcome the new stable version of El-Get, the much awaited version 4.1 has now been branched for your pleasure. It&amp;rsquo;s packed with lots of features to make your life easy, comes with a Info documentation book and even has a logo. That&amp;rsquo;s no joke, I found one, at least:
Why El-Get is relevant Emacs 24.1 is the first release that includes package.el, and it even allows the user to setup several sources where to fetch packages.</description>
    </item>
    
    <item>
      <title>el-get-3.1</title>
      <link>http://tapoueh.org/blog/2011/09/el-get-3.1/</link>
      <pubDate>Fri, 16 Sep 2011 14:13:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/09/el-get-3.1/</guid>
      <description>The el-get project releases its new stable version, 3.1. This new release fixes bugs, add a host of new recipes (we have 420 of them and counting) and some nice new features too. You really want to upgrade.
New features Among the features you will find dependencies management and M-x el-get-list-packages, that you should try as soon as possible. Of course, don&amp;rsquo;t miss M-x el-get-self-update that eases the process somehow.</description>
    </item>
    
    <item>
      <title>Multi-Version support for Extensions</title>
      <link>http://tapoueh.org/blog/2011/06/multi-version-support-for-extensions/</link>
      <pubDate>Wed, 29 Jun 2011 09:50:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/06/multi-version-support-for-extensions/</guid>
      <description>We still have this problem to solve with extensions and their packaging. How to best organize things so that your extension is compatible with before 9.1 and 9.1 and following releases of PostgreSQL?
Well, I had to do it for the ip4r contribution, and I wanted the following to happen:
dpkg-deb: building package `postgresql-8.3-ip4r&#39; ... dpkg-deb: building package `postgresql-8.4-ip4r&#39; ... dpkg-deb: building package `postgresql-9.0-ip4r&#39; ... dpkg-deb: building package `postgresql-9.1-ip4r&#39; ...  And here&amp;rsquo;s a simple enough way to achieve that.</description>
    </item>
    
    <item>
      <title>el-get 2.2</title>
      <link>http://tapoueh.org/blog/2011/05/el-get-2.2/</link>
      <pubDate>Thu, 26 May 2011 12:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/05/el-get-2.2/</guid>
      <description>We&amp;rsquo;ve spotted a little too late for our own taste a discrepancy in the source tree: a work in progress patch landed in git just before to release el-get stable. So we cleaned the tree (thanks again Julien), branched a stable maintenance tree, and released 2.2 from there.
You&amp;rsquo;re back to enjoying el-get :)</description>
    </item>
    
    <item>
      <title>el-get 2.1</title>
      <link>http://tapoueh.org/blog/2011/05/el-get-2.1/</link>
      <pubDate>Thu, 26 May 2011 10:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/05/el-get-2.1/</guid>
      <description>Current el-get status is stable, ready for daily use and packed with extra features that make life easier. There are some more things we could do, as always, but they will be about smoothing things further.
Latest released version el-get version 2.1 is available, with a boatload of features, including autoloads support, byte-compiling in an external clean room Emacs instance, custom support, lazy initialisation support (defering all init functions to eval-after-load), and multi repositories ELPA support.</description>
    </item>
    
    <item>
      <title>Extension module_pathname and .sql.in</title>
      <link>http://tapoueh.org/blog/2011/05/extension-module_pathname-and-.sql.in/</link>
      <pubDate>Mon, 02 May 2011 17:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/05/extension-module_pathname-and-.sql.in/</guid>
      <description>While currently too busy at work to deliver much Open Source contributions, let&amp;rsquo;s debunk an old habit of PostgreSQL extension authors. It&amp;rsquo;s all down to copy pasting from contrib, and there&amp;rsquo;s no reason to continue doing $libdir this way ever since 7.4 days.
Let&amp;rsquo;s take an example here, with the prefix extension. This one too will need some love, but is still behind on my spare time todo list, sorry about that.</description>
    </item>
    
    <item>
      <title>Some notes about Skytools3</title>
      <link>http://tapoueh.org/blog/2011/04/some-notes-about-skytools3/</link>
      <pubDate>Mon, 11 Apr 2011 11:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/04/some-notes-about-skytools3/</guid>
      <description>I&amp;rsquo;ve been working on skytools3 packaging lately. I&amp;rsquo;ve been pushing quite a lot of work into it, in order to have exactly what I needed out of the box, after some 3 years of production and experiences with the products. Plural, yes, because even if pgbouncer and plproxy are siblings to the projets (same developers team, separate life cycle and releases), then skytools still includes several sub-projects.
Here&amp;rsquo;s what the skytools3 packaging is going to look like:</description>
    </item>
    
    <item>
      <title>Extensions in 9.1</title>
      <link>http://tapoueh.org/blog/2011/03/extensions-in-9.1/</link>
      <pubDate>Tue, 01 Mar 2011 16:30:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/03/extensions-in-9.1/</guid>
      <description>If you&amp;rsquo;ve not been following closely you might have missed out on extensions integration. Well, Tom spent some time on the patches I&amp;rsquo;ve been preparing for the last 4 months. And not only did he commit most of the work but he also enhanced some parts of the code (better factoring) and basically finished it.
At the previous developer meeting his advice was to avoid putting too much into the very first version of the patch for it to stand its chances of being integrated, and while in the review process more than one major PostgreSQL contributor expressed worries about the size of the patch and the number of features proposed.</description>
    </item>
    
    <item>
      <title>el-get 1.1, with 174 recipes</title>
      <link>http://tapoueh.org/blog/2010/12/el-get-1.1-with-174-recipes/</link>
      <pubDate>Mon, 20 Dec 2010 16:45:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/12/el-get-1.1-with-174-recipes/</guid>
      <description>Yes, you read it well, el-get currently features 174 recipes, and is now reaching the 1.1 release. The reason for this release is mainly that I have two big chunks of code to review and the current code has been very stable for awhile. It seems better to do a release with the stable code that exists now before to shake it this much. If you&amp;rsquo;re wondering when to jump in the water and switch to using el-get, now is a pretty good time.</description>
    </item>
    
    <item>
      <title>Introducing Extensions</title>
      <link>http://tapoueh.org/blog/2010/10/introducing-extensions/</link>
      <pubDate>Thu, 21 Oct 2010 13:45:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/introducing-extensions/</guid>
      <description>After reading Simon&amp;rsquo;s blog post, I can&amp;rsquo;t help but try to give some details about what it is exactly that I&amp;rsquo;m working on. As he said, there are several aspects to extensions in PostgreSQL, it all begins here: Chapter 35. Extending SQL.
It&amp;rsquo;s possible, and mostly simple enough, to add your own code or behavior to PostgreSQL, so that it will use your code and your semantics while solving user queries.</description>
    </item>
    
    <item>
      <title>el-get reaches 1.0</title>
      <link>http://tapoueh.org/blog/2010/10/el-get-reaches-1.0/</link>
      <pubDate>Thu, 07 Oct 2010 13:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/el-get-reaches-1.0/</guid>
      <description>It&amp;rsquo;s been a week since the last commits in the el-get repository, and those were all about fixing and adding recipes, and about notifications. Nothing like core plumbing you see. Also, 0.9 was released on 2010-08-24 and felt pretty complete already, then received lots of improvements. It&amp;rsquo;s high time to cross the line and call it 1.0!
Now existing users will certainly just be moderatly happy to see the tool reach that version number, depending whether they think more about the bugs they want to see fixed (ftp is supported, only called http) and the new features they want to see in ( info documentation) or more about what el-get does for them already today&amp;hellip;</description>
    </item>
    
    <item>
      <title>switch-window reaches 0.8</title>
      <link>http://tapoueh.org/blog/2010/09/switch-window-reaches-0.8/</link>
      <pubDate>Mon, 13 Sep 2010 17:45:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/09/switch-window-reaches-0.8/</guid>
      <description>I wanted to play with the idea of using the whole keyboard for my switch-window utility, but wondered how to get those keys in the right order and all. Finally found quail-keyboard-layout which seems to exists for such uses, as you can see:
(loop with layout = (split-string quail-keyboard-layout &amp;quot;&amp;quot;) for row from 1 to 4 collect (loop for col from 1 to 12 (&amp;quot;q&amp;quot; &amp;quot;w&amp;quot; &amp;quot;e&amp;quot; &amp;quot;r&amp;quot; &amp;quot;t&amp;quot; &amp;quot;y&amp;quot; &amp;quot;u&amp;quot; &amp;quot;i&amp;quot; &amp;quot;o&amp;quot; &amp;quot;p&amp;quot; &amp;quot;[&amp;quot; &amp;quot;]&amp;quot;) (&amp;quot;a&amp;quot; &amp;quot;s&amp;quot; &amp;quot;d&amp;quot; &amp;quot;f&amp;quot; &amp;quot;g&amp;quot; &amp;quot;h&amp;quot; &amp;quot;j&amp;quot; &amp;quot;k&amp;quot; &amp;quot;l&amp;quot; &amp;quot;;&amp;quot; &amp;quot;&#39;&amp;quot; &amp;quot;\\&amp;quot;) (&amp;quot;z&amp;quot; &amp;quot;x&amp;quot; &amp;quot;c&amp;quot; &amp;quot;v&amp;quot; &amp;quot;b&amp;quot; &amp;quot;n&amp;quot; &amp;quot;m&amp;quot; &amp;quot;,&amp;quot; &amp;quot;.</description>
    </item>
    
    <item>
      <title>Synchronous Replication</title>
      <link>http://tapoueh.org/blog/2010/09/synchronous-replication/</link>
      <pubDate>Mon, 06 Sep 2010 18:05:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/09/synchronous-replication/</guid>
      <description>Although the new asynchronous replication facility that ships with 9.0 ain&amp;rsquo;t released to the wide public yet, our hackers hero are already working on the synchronous version of it. A part of the facility is rather easy to design, we want something comparable to DRBD flexibility, but specific to our database world. So synchronous would either mean recv, fsync or apply, depending on what you need the standby to have already done when the master acknowledges the COMMIT.</description>
    </item>
    
    <item>
      <title>el-get and dim-switch-window status update</title>
      <link>http://tapoueh.org/blog/2010/08/el-get-and-dim-switch-window-status-update/</link>
      <pubDate>Mon, 09 Aug 2010 15:35:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/el-get-and-dim-switch-window-status-update/</guid>
      <description>Thanks to you readers of Planet Emacsen taking the time to try those pieces of emacs lisp found in my blog, and also the time to comment on them, some bugs have been fixed, and new releases appeared.
el-get had some typo kind of bug in its support for apt-get and fink packages, and I managed to break the elpa and http support when going all asynchronous by forgetting to update the call convention I&amp;rsquo;m using.</description>
    </item>
    
    <item>
      <title>debian packaging PostgreSQL extensions</title>
      <link>http://tapoueh.org/blog/2010/08/debian-packaging-postgresql-extensions/</link>
      <pubDate>Fri, 06 Aug 2010 13:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/debian-packaging-postgresql-extensions/</guid>
      <description>In trying to help an extension debian packaging effort, I&amp;rsquo;ve once again proposed to handle it. That&amp;rsquo;s because I now begin to know how to do it, as you can see in my package overview page at debian QA facility. There&amp;rsquo;s a reason why I proposed myself here, it&amp;rsquo;s that yet another tool of mine is now to be found in debian, and should greatly help extension packaging there. You can already check for the postgresql-server-dev-all package page if you&amp;rsquo;re that impatient!</description>
    </item>
    
    <item>
      <title>Querying the Catalog to plan an upgrade</title>
      <link>http://tapoueh.org/blog/2010/08/querying-the-catalog-to-plan-an-upgrade/</link>
      <pubDate>Thu, 05 Aug 2010 11:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/querying-the-catalog-to-plan-an-upgrade/</guid>
      <description>Some user on IRC was reading the releases notes in order to plan for a minor upgrade of his 8.3.3 installation, and was puzzled about potential needs for rebuilding GIST indexes. That&amp;rsquo;s from the 8.3.5 release notes, and from the 8.3.8 notes you see that you need to consider hash indexes on interval columns too. Now the question is, how to find out if any such beasts are in use in your database?</description>
    </item>
    
    <item>
      <title>Using indexes as column store?</title>
      <link>http://tapoueh.org/blog/2010/07/using-indexes-as-column-store/</link>
      <pubDate>Thu, 08 Jul 2010 11:15:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/07/using-indexes-as-column-store/</guid>
      <description>There&amp;rsquo;s a big trend nowadays about using column storage as opposed to what PostgreSQL is doing, which would be row storage. The difference is that if you have the same column value in a lot of rows, you could get to a point where you have this value only once in the underlying storage file. That means high compression. Then you tweak the executor to be able to load this value only once, not once per row, and you win another huge source of data traffic (often enough, from disk).</description>
    </item>
    
    <item>
      <title>Import fixed width data with pgloader</title>
      <link>http://tapoueh.org/blog/2010/04/import-fixed-width-data-with-pgloader/</link>
      <pubDate>Tue, 27 Apr 2010 12:01:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/04/import-fixed-width-data-with-pgloader/</guid>
      <description>&lt;p&gt;So, following previous blog entries about importing
&lt;em&gt;fixed width&lt;/em&gt; data, from
&lt;a href=&#34;http://www.postgresonline.com/journal/index.php?/archives/157-Import-fixed-width-data-into-PostgreSQL-with-just-PSQL.html&#34;&gt;Postgres Online Journal&lt;/a&gt; and
&lt;a href=&#34;http://people.planetpostgresql.org/dfetter/index.php?/archives/58-psql,-Paste,-Perl-Pefficiency!.html&#34;&gt;David (perl) Fetter&lt;/a&gt;, I couldn&amp;rsquo;t resist following
the meme and showing how to achieve the same thing with
&lt;a href=&#34;http://pgloader.projects.postgresql.org/#toc9&#34;&gt;pgloader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgloader activity report</title>
      <link>http://tapoueh.org/blog/2010/04/pgloader-activity-report/</link>
      <pubDate>Tue, 06 Apr 2010 09:10:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/04/pgloader-activity-report/</guid>
      <description>&lt;p&gt;Yes. This
&lt;a href=&#34;http://pgloader.projects.postgresql.org/&#34;&gt;pgloader&lt;/a&gt; project is still maintained and somewhat
active. Development happens when I receive a complaint, either about a bug
in existing code or a feature in yet-to-write code. If you have a bug to
report, just send me an email!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Yet Another PostgreSQL tool hits debian</title>
      <link>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</link>
      <pubDate>Wed, 25 Nov 2009 11:49:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</guid>
      <description>So there it is, this newer contribution of mine that I presented at PGDay is now in debian NEW queue. pg_staging will empower you with respect to what you do about those nightly backups ( pg_dump -Fc or something).
The tool provides a lot of commands to either dump or restore a database. It comes with documentation covering about it all, except for the londiste support part, which will be there in time for 1.</description>
    </item>
    
    <item>
      <title>prefix 1.0.0</title>
      <link>http://tapoueh.org/blog/2009/10/prefix-1.0.0/</link>
      <pubDate>Tue, 06 Oct 2009 15:56:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/10/prefix-1.0.0/</guid>
      <description>So there it is, at long last, the final 1.0.0 release of prefix! It&amp;rsquo;s on its way into the debian repository (targetting sid, in testing in 10 days) and available on pgfoundry to.
In order to make it clear that I intend to maintain this version, the number has 3 digits rather than 2&amp;hellip; which is also what PostgreSQL users will expect.
The only last minute change is that you can now use the first version of the two following rather than the second one:</description>
    </item>
    
    <item>
      <title>hstore-new &amp; preprepare reach debian too</title>
      <link>http://tapoueh.org/blog/2009/08/hstore-new--preprepare-reach-debian-too/</link>
      <pubDate>Tue, 18 Aug 2009 09:14:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/08/hstore-new--preprepare-reach-debian-too/</guid>
      <description>It seems like debian developers are back from annual conference and holiday, so they have had a look at the NEW queue and processed the packages in there. Two of them were mines and waiting to get in unstable, hstore-new and preprepare.
Time to do some bug fixing already, as hstore-new packaging is using a bash&amp;rsquo;ism I shouldn&amp;rsquo;t rely on (or so the debian buildfarm is telling me) and for preprepare I was waiting for inclusion before to go improving the GUC management, stealing some code from Selena&amp;rsquo;s pgGearman :)</description>
    </item>
    
    <item>
      <title>prefix 1.0~rc2 in debian testing</title>
      <link>http://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</link>
      <pubDate>Mon, 03 Aug 2009 14:50:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</guid>
      <description>At long last, here it is. With binary versions both for postgresal-8.3 and postgresal-8.4! Unfortunately my other packaging efforts are still waiting on the NEW queue, but I hope to soon see hstore-new and preprepare enter debian too.
Anyway, the plan for prefix is to now wait something like 2 weeks, then, baring showstopper bugs, release the 1.0 final version. If you have a use for it, now is the good time for testing it!</description>
    </item>
    
    <item>
      <title>prefix extension reaches 1.0 (rc1)</title>
      <link>http://tapoueh.org/blog/2009/06/prefix-extension-reaches-1.0-rc1/</link>
      <pubDate>Tue, 23 Jun 2009 10:53:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/06/prefix-extension-reaches-1.0-rc1/</guid>
      <description>At long last, after millions and millions of queries just here at work and some more in other places, the prefix project is reaching 1.0 milestone. The release candidate is getting uploaded into debian at the moment of this writing, and available at the following place: prefix-1.0~rc1.tar.gz.
If you have any use for it (as some VoIP companies have already), please consider testing it, in order for me to release a shiny 1.</description>
    </item>
    
    <item>
      <title>Prepared Statements and pgbouncer</title>
      <link>http://tapoueh.org/blog/2009/05/prepared-statements-and-pgbouncer/</link>
      <pubDate>Thu, 14 May 2009 00:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/05/prepared-statements-and-pgbouncer/</guid>
      <description>On the performance mailing list, a recent thread drew my attention. It devired to be about using a connection pool software and prepared statements in order to increase scalability of PostgreSQL when confronted to a lot of concurrent clients all doing simple select queries. The advantage of the pooler is to reduce the number of backends needed to serve the queries, thus reducing PostgreSQL internal bookkeeping. Of course, my choice of software here is clear: PgBouncer is an excellent top grade solution, performs real well (it won&amp;rsquo;t parse queries), reliable, flexible.</description>
    </item>
    
    <item>
      <title>Skytools 3.0 reaches alpha1</title>
      <link>http://tapoueh.org/blog/2009/04/skytools-3.0-reaches-alpha1/</link>
      <pubDate>Tue, 14 Apr 2009 00:00:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/04/skytools-3.0-reaches-alpha1/</guid>
      <description>It&amp;rsquo;s time for Skytools news again! First, we did improve documentation of current stable branch with hosting high level presentations and tutorials on the PostgreSQL wiki. Do check out the Londiste Tutorial, it seems that&amp;rsquo;s what people hesitating to try out londiste were missing the most.
The other things people miss out a lot in current stable Skytools (version 2.1.9 currently) are cascading replication (which allows for switchover and failover) and DDL support.</description>
    </item>
    
    <item>
      <title>emacs-snapshot</title>
      <link>http://tapoueh.org/blog/2008/12/emacs-snapshot/</link>
      <pubDate>Mon, 08 Dec 2008 16:10:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2008/12/emacs-snapshot/</guid>
      <description>If you want to live on the bleeding edge, it&amp;rsquo;s easy enough to get a non existing release of GNU Emacs under debian sid, thanks to http://emacs.orebokech.com/.
The problem is that Emacs Muse is broken on emacs-snapshot, partly because of Htmlize which is unable to find the face fonts (I got (error &amp;quot;Invalid face&amp;quot;)), partly because of my configuration itself:
hunk ./dim-muse.el 22 - &#39;((&amp;quot;pgsql.tapoueh.org&amp;quot; $ - (,@(muse-project-alist-dirs &amp;quot;~/dev/muse/site&amp;quot;) $ + &#39;((&amp;quot;pgsql.</description>
    </item>
    
  </channel>
</rss>