<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pgloader on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>https://tapoueh.org/tags/pgloader/</link>
    <description>Recent content in Pgloader on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jan 2018 10:01:45 +0100</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/pgloader/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrating to PostgreSQL, the White Paper</title>
      <link>https://tapoueh.org/blog/2018/01/migrating-to-postgresql-the-white-paper/</link>
      <pubDate>Thu, 11 Jan 2018 10:01:45 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/01/migrating-to-postgresql-the-white-paper/</guid>
      <description>&lt;p&gt;After having been involved in many migration projects over the last 10
years, I decided to publish the following &lt;a href=&#34;https://pgloader.io/white-paper&#34;&gt;White
Paper&lt;/a&gt; in order to share my learnings.&lt;/p&gt;

&lt;p&gt;The paper is titled &lt;a href=&#34;https://pgloader.io/white-paper&#34;&gt;Migrating to PostgreSQL, Tools and
Methodology&lt;/a&gt; and details the &lt;a href=&#34;https://pgloader.io/blog/continuous-migration/&#34;&gt;Continuous
Migration&lt;/a&gt; approach. It
describes how to migrate from another relational database server technology
to PostgreSQL. The reasons to do so are many, and first among them is often
the licensing model.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>from MySQL to PostgreSQL</title>
      <link>https://tapoueh.org/blog/2017/07/from-mysql-to-postgresql/</link>
      <pubDate>Thu, 06 Jul 2017 17:30:11 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2017/07/from-mysql-to-postgresql/</guid>
      <description>&lt;p&gt;Today
&lt;a href=&#34;https://github.com/dimitri/pgloader/releases/tag/v3.4.1&#34;&gt;pgloader v3.4.1&lt;/a&gt;
is released and available! This new release comes with 110 commits as show
in
&lt;a href=&#34;https://github.com/dimitri/pgloader/compare/v3.3.2...v3.4.1&#34;&gt;github compare view&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This release of &lt;a href=&#34;http://pgloader.io&#34;&gt;pgloader&lt;/a&gt; is following the tradition of
simplifying things for users, or if you allow me to
quote &lt;a href=&#34;https://en.wikiquote.org/wiki/Alan_Kay&#34;&gt;Alan Kay&lt;/a&gt;, I believe that if
&lt;em&gt;simple things should be simple, complex things should be possible.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quicklisp and debian</title>
      <link>https://tapoueh.org/blog/2015/05/quicklisp-and-debian/</link>
      <pubDate>Sat, 02 May 2015 16:06:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2015/05/quicklisp-and-debian/</guid>
      <description>&lt;p&gt;Common Lisp users are very happy to use
&lt;a href=&#34;https://www.quicklisp.org/beta/&#34;&gt;Quicklisp&lt;/a&gt; when it comes to
downloading and maintaining dependencies between their own code and the
&lt;a href=&#34;http://quickdocs.org/&#34;&gt;librairies&lt;/a&gt; it is using.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Back From FOSDEM 2015</title>
      <link>https://tapoueh.org/blog/2015/02/back-from-fosdem-2015/</link>
      <pubDate>Mon, 09 Feb 2015 10:36:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2015/02/back-from-fosdem-2015/</guid>
      <description>&lt;p&gt;The
&lt;a href=&#34;https://fosdem.org/2015/&#34;&gt;FOSDEM 2015&lt;/a&gt; edition has been awesome this year, the usual mix of meeting
with old friends, talking about interesting topics, seeing tremendous
activity in all Open Source domains, and having Belgium beers in the
evenings.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why is pgloader so much faster?</title>
      <link>https://tapoueh.org/blog/2014/05/why-is-pgloader-so-much-faster/</link>
      <pubDate>Wed, 14 May 2014 14:59:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2014/05/why-is-pgloader-so-much-faster/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://pgloader.io/&#34;&gt;pgloader&lt;/a&gt; loads data into PostgreSQL. The new version is stable enough
nowadays that it&amp;rsquo;s soon to be released, the last piece of the
&lt;code&gt;3.1.0&lt;/code&gt; puzzle
being full
&lt;a href=&#34;https://www.debian.org/&#34;&gt;debian&lt;/a&gt; packaging of the tool.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Import fixed width data with pgloader</title>
      <link>https://tapoueh.org/blog/2013/11/import-fixed-width-data-with-pgloader/</link>
      <pubDate>Mon, 18 Nov 2013 12:48:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/11/import-fixed-width-data-with-pgloader/</guid>
      <description>&lt;p&gt;A long time ago we talked about how to
&lt;a href=&#34;https://tapoueh.org/blog/2010/04/27-import-fixed-width-data-with-pgloader.html&#34;&gt;Import fixed width data with pgloader&lt;/a&gt;, following up on other stories still
online at
&lt;a href=&#34;http://www.postgresonline.com/journal/index.php?/archives/157-Import-fixed-width-data-into-PostgreSQL-with-just-PSQL.html&#34;&gt;Postgres OnLine Journal&lt;/a&gt; and on
&lt;a href=&#34;http://people.planetpostgresql.org/dfetter/index.php?/archives/58-psql,-Paste,-Perl-Pefficiency!.html&#34;&gt;David Fetter&amp;rsquo;s blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Back then, I showed that using pgloader made it easier to import the data,
but also showed quite poor performances characteristics due to using the
&lt;code&gt;debug&lt;/code&gt; mode in the timings. Let&amp;rsquo;s update that article with
current &lt;a href=&#34;https://github.com/dimitri/pgloader&#34;&gt;pgloader&lt;/a&gt; wonders!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrating Sakila from MySQL to PostgreSQL</title>
      <link>https://tapoueh.org/blog/2013/11/migrating-sakila-from-mysql-to-postgresql/</link>
      <pubDate>Tue, 12 Nov 2013 11:37:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/11/migrating-sakila-from-mysql-to-postgresql/</guid>
      <description>&lt;p&gt;As presented at the
&lt;a href=&#34;http://2013.pgconf.eu/&#34;&gt;PostgreSQL Conference Europe&lt;/a&gt; the new version of
&lt;a href=&#34;https://github.com/dimitri/pgloader&#34;&gt;pgloader&lt;/a&gt;
is now able to fully migrate a MySQL database, including discovering the
schema, casting data types, transforming data and default values.
&lt;a href=&#34;http://dev.mysql.com/doc/sakila/en/&#34;&gt;Sakila&lt;/a&gt; is
the traditional MySQL example database, in this article we&amp;rsquo;re going to fully
migrate it over to PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Back From Dublin</title>
      <link>https://tapoueh.org/blog/2013/11/back-from-dublin/</link>
      <pubDate>Tue, 05 Nov 2013 09:53:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/11/back-from-dublin/</guid>
      <description>Last week I had the pleasure to present two talks at the awesome PostgreSQL Conference Europe. The first one was actually a tutorial about Writing &amp;amp; using Postgres Extensions where we spent 3 hours on what are PostgreSQL Extensions, what you can expect from them, and how to develop a new one. Then I also had the opportunity to present the new version of pgloader in a talk about Migrating from MySQL to PostgreSQL.</description>
    </item>
    
    <item>
      <title>A Worthwile Micro Optimisation</title>
      <link>https://tapoueh.org/blog/2013/10/a-worthwile-micro-optimisation/</link>
      <pubDate>Thu, 03 Oct 2013 22:10:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/10/a-worthwile-micro-optimisation/</guid>
      <description>&lt;p&gt;In our previous article about
&lt;a href=&#34;https://tapoueh.org/blog/2013/10/01-loading-geolocation-data&#34;&gt;Loading Geolocation Data&lt;/a&gt;, we did load some
data into PostgreSQL and saw the quite noticable impact of a user
transformation. As it happens, the function that did the integer to IP
representation was so naive as to scratch the micro optimisation itch of
some Common Lisp hackers: thanks a lot guys, in particular
&lt;a href=&#34;https://github.com/stassats&#34;&gt;stassats&lt;/a&gt; who came
up with the solution we&amp;rsquo;re seeing now.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Loading Geolocation Data</title>
      <link>https://tapoueh.org/blog/2013/10/loading-geolocation-data/</link>
      <pubDate>Tue, 01 Oct 2013 16:52:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/10/loading-geolocation-data/</guid>
      <description>&lt;p&gt;As I&amp;rsquo;ve been mentionning in the past already, I&amp;rsquo;m currently rewriting
pgloader from scratch in
&lt;a href=&#34;https://tapoueh.org/tags/common-lisp&#34;&gt;Common Lisp&lt;/a&gt;. In terms of
&lt;a href=&#34;http://en.wikipedia.org/wiki/Technical_debt&#34;&gt;technical debt&lt;/a&gt; that&amp;rsquo;s akin
to declaring
&lt;em&gt;bankrupcy&lt;/em&gt;, which is both sad news and good news as there&amp;rsquo;s
suddenly new hope of doing it right this time.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrating from MySQL to PostgreSQL</title>
      <link>https://tapoueh.org/blog/2013/08/migrating-from-mysql-to-postgresql/</link>
      <pubDate>Thu, 08 Aug 2013 17:41:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/08/migrating-from-mysql-to-postgresql/</guid>
      <description>&lt;p&gt;About the only time when I will accept to work with MySQL is when you need
help to migrate away from it because you decided to move to
&lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;
instead. And it&amp;rsquo;s already been too much of a pain really, so after all this
time I began consolidating what I know about that topic and am writing a
software to help me here. Consider it the
&lt;strong&gt;&lt;em&gt;MySQL Migration Toolkit&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Playing with pgloader</title>
      <link>https://tapoueh.org/blog/2013/02/playing-with-pgloader/</link>
      <pubDate>Tue, 12 Feb 2013 11:17:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/02/playing-with-pgloader/</guid>
      <description>While making progress with both Event Triggers and Extension Templates, I needed to make a little break. My current keeping sane mental exercise seems to mainly involve using Common Lisp, a programming language that ships with about all the building blocks you need.
Yes, that old language brings so much on the table
When using Common Lisp, you have an awesome interactive development environment where you can redefine function and objects while testing them.</description>
    </item>
    
    <item>
      <title>pgloader: what&#39;s next?</title>
      <link>https://tapoueh.org/blog/2013/01/pgloader-whats-next/</link>
      <pubDate>Mon, 28 Jan 2013 10:48:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/01/pgloader-whats-next/</guid>
      <description>pgloader is a tool to help loading data into PostgreSQL, adding some error management to the COPY command. COPY is the fast way of loading data into PostgreSQL and is transaction safe. That means that if a single error appears within your bulk of data, you will have loaded none of it. pgloader will submit the data again in smaller chunks until it&amp;rsquo;s able to isolate the bad from the good, and then the good is loaded in.</description>
    </item>
    
    <item>
      <title>Automated Setup for pgloader</title>
      <link>https://tapoueh.org/blog/2013/01/automated-setup-for-pgloader/</link>
      <pubDate>Thu, 17 Jan 2013 14:32:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/01/automated-setup-for-pgloader/</guid>
      <description>&lt;p&gt;Another day, another migration from &lt;em&gt;MySQL&lt;/em&gt;
to &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;&amp;hellip; or at least that&amp;rsquo;s how it
feels sometimes. This time again I&amp;rsquo;ve been using some quite old scripts to
help me do the migration.&lt;/p&gt;

&lt;div class=&#34;alert danger &#34;&gt;
  &lt;p&gt;This article is about versions 2.x of pgloader, which are not supported
anymore. Consider using &lt;a href=&#34;http://pgloader.io&#34;&gt;pgloader&lt;/a&gt; version 3.x instead.
You won&amp;rsquo;t need to generate the configuration anymore as pgloader now
connects to a live instance of the source database and query its system
catalogs for you.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Tutoriel pgloader</title>
      <link>https://tapoueh.org/blog/2011/08/tutoriel-pgloader/</link>
      <pubDate>Mon, 15 Aug 2011 15:39:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/tutoriel-pgloader/</guid>
      <description>En reprenant le contenu des articles de la série sur pgloader, j&amp;rsquo;ai pris le temps de compiler un tutoriel complet, en anglais. Si j&amp;rsquo;en crois les quelques mails que je reçois régulièrement au sujet de pgloader depuis quelques années maintenant, cela devrait aider les nouveaux utilisateurs.</description>
    </item>
    
    <item>
      <title>pgloader tutorial</title>
      <link>https://tapoueh.org/blog/2011/08/pgloader-tutorial/</link>
      <pubDate>Mon, 15 Aug 2011 15:33:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/pgloader-tutorial/</guid>
      <description>To finish up the pgloader series, I&amp;rsquo;ve compiled all the information into a single page, the long awaited pgloader tutorial. That should help lots of users to get started with pgloader.</description>
    </item>
    
    <item>
      <title>Champs statiques &amp; pgloader</title>
      <link>https://tapoueh.org/blog/2011/08/champs-statiques--pgloader/</link>
      <pubDate>Fri, 12 Aug 2011 11:01:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/champs-statiques--pgloader/</guid>
      <description>Dans la série de nos articles sur pgloader, l&amp;rsquo;article du jour décrit comment insérer des valeurs constantes (absentes du fichier de données) pendant le chargement. Cela permet par exemple d&amp;rsquo;ajouter un champ « origine », qui dépend typiquement de la chaîne de production des données et se retrouve souvent dans le nom du fichier de données lui-même.</description>
    </item>
    
    <item>
      <title>pgloader constant cols</title>
      <link>https://tapoueh.org/blog/2011/08/pgloader-constant-cols/</link>
      <pubDate>Fri, 12 Aug 2011 11:00:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/pgloader-constant-cols/</guid>
      <description>&lt;p&gt;The previous articles in the &lt;a href=&#34;http://pgloader.io&#34;&gt;pgloader&lt;/a&gt; series
detailed
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/22-how-to-use-pgloader.html&#34;&gt;How To Use PgLoader&lt;/a&gt; then
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/29-how-to-setup-pgloader.html&#34;&gt;How to Setup pgloader&lt;/a&gt;,
then what to expect from
a
&lt;a href=&#34;http://tapoueh.org/blog/2011/08/01-parallel-pgloader.html&#34;&gt;parallel pgloader&lt;/a&gt; setup,
and
then
&lt;a href=&#34;http://tapoueh.org/blog/2011/08/05-reformating-modules-for-pgloader.html&#34;&gt;pgloader reformating&lt;/a&gt;.
Another need you might encounter when you get to
use &lt;a href=&#34;../../../pgsql/pgloader.html&#34;&gt;pgloader&lt;/a&gt; is adding &lt;em&gt;constant&lt;/em&gt; values
into a table&amp;rsquo;s column.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgloader reformating</title>
      <link>https://tapoueh.org/blog/2011/08/pgloader-reformating/</link>
      <pubDate>Fri, 05 Aug 2011 11:30:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/pgloader-reformating/</guid>
      <description>&lt;p&gt;Back to our series about &lt;a href=&#34;http://pgloader.io&#34;&gt;pgloader&lt;/a&gt;. The previous
articles
detailed
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/22-how-to-use-pgloader.html&#34;&gt;How To Use PgLoader&lt;/a&gt; then
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/29-how-to-setup-pgloader.html&#34;&gt;How to Setup pgloader&lt;/a&gt;,
then what to expect from
a
&lt;a href=&#34;http://tapoueh.org/blog/2011/08/01-parallel-pgloader.html&#34;&gt;parallel pgloader&lt;/a&gt; setup.
This article will detail how to &lt;em&gt;reformat&lt;/em&gt; input columns so that
what &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; sees is not what&amp;rsquo;s in the data
file, but the result of a &lt;em&gt;transformation&lt;/em&gt; from this data into something
acceptable as an &lt;em&gt;input&lt;/em&gt; for the target data type.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reformater avec pgloader</title>
      <link>https://tapoueh.org/blog/2011/08/reformater-avec-pgloader/</link>
      <pubDate>Fri, 05 Aug 2011 11:26:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/reformater-avec-pgloader/</guid>
      <description>Dans la série de nos articles sur pgloader, le dernier venu détaille comment utiliser la fonction de reformatage de cet outil. Dans le cadre d&amp;rsquo;utilisation d&amp;rsquo;un ETL, cela est assimilé à la phase Transform, ce qui fait de pgloader une solution simple pour vos besoins d&amp;rsquo;ETL.</description>
    </item>
    
    <item>
      <title>Parallel pgloader</title>
      <link>https://tapoueh.org/blog/2011/08/parallel-pgloader/</link>
      <pubDate>Mon, 01 Aug 2011 12:15:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/parallel-pgloader/</guid>
      <description>&lt;p&gt;This article continues the series that began
with
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/22-how-to-use-pgloader.html&#34;&gt;How To Use PgLoader&lt;/a&gt; then
detailed
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/29-how-to-setup-pgloader.html&#34;&gt;How to Setup pgloader&lt;/a&gt;.
We have some more fine points to talk about here, today&amp;rsquo;s article is about
loading your data in parallel with &lt;a href=&#34;../../../pgsql/pgloader.html&#34;&gt;pgloader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgloader en parallèle</title>
      <link>https://tapoueh.org/blog/2011/08/pgloader-en-parall%C3%A8le/</link>
      <pubDate>Mon, 01 Aug 2011 12:15:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/08/pgloader-en-parall%C3%A8le/</guid>
      <description>&lt;p&gt;Dans la série des articles sur
&lt;a href=&#34;../../../pgsql/pgloader.html&#34;&gt;pgloader&lt;/a&gt;, nous détaillons cette fois la
configuration du paraléllisme de chargement des données.  Une fois de plus,
je vous réfère à l&amp;rsquo;article de référence en anglais :
&lt;a href=&#34;http://tapoueh.org/blog/2011/08/01-parallel-pgloader.html&#34;&gt;Parallel pgloader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configurer pgloader</title>
      <link>https://tapoueh.org/blog/2011/07/configurer-pgloader/</link>
      <pubDate>Fri, 29 Jul 2011 15:00:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/07/configurer-pgloader/</guid>
      <description>Je viens de publier un billet en anglais intitulé How to Setup pgloader, qui complète l&amp;rsquo;écriture en cours d&amp;rsquo;un tutoriel pgloader plus complet. Une fois de plus, je n&amp;rsquo;ai pas pris le temps de traduire cet article en français avant de savoir si cela vous intéresse, ô lecteurs. Si c&amp;rsquo;est le cas il suffit de me l&amp;rsquo;indiquer par mail (ou courriel, après tout) pour que j&amp;rsquo;ajoute cela dans ma TODO liste.</description>
    </item>
    
    <item>
      <title>How to Setup pgloader</title>
      <link>https://tapoueh.org/blog/2011/07/how-to-setup-pgloader/</link>
      <pubDate>Fri, 29 Jul 2011 15:00:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/07/how-to-setup-pgloader/</guid>
      <description>&lt;p&gt;In a previous article we
detailed
&lt;a href=&#34;http://tapoueh.org/blog/2011/07/22-how-to-use-pgloader.html&#34;&gt;how to use pgloader&lt;/a&gt;,
let&amp;rsquo;s now see how to write the &lt;code&gt;pgloader.conf&lt;/code&gt; that
instructs &lt;a href=&#34;http://pgloader.io&#34;&gt;pgloader&lt;/a&gt; about what to
do.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Comment Utiliser pgloader</title>
      <link>https://tapoueh.org/blog/2011/07/comment-utiliser-pgloader/</link>
      <pubDate>Fri, 22 Jul 2011 13:48:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/07/comment-utiliser-pgloader/</guid>
      <description>C&amp;rsquo;est une question qui revient régulièrement, et à laquelle je pensais avoir apporté une réponse satisfaisante avec les exemples pgloader. Ce document ressemble un peu à un tutoriel, en anglais, et je l&amp;rsquo;ai détaillé dans l&amp;rsquo;article how to use pgloader sur ce même site, en anglais. Si la demande est suffisante, je le traduirai en français.
En attendant, bonne lecture !</description>
    </item>
    
    <item>
      <title>How To Use PgLoader</title>
      <link>https://tapoueh.org/blog/2011/07/how-to-use-pgloader/</link>
      <pubDate>Fri, 22 Jul 2011 13:38:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/07/how-to-use-pgloader/</guid>
      <description>&lt;p&gt;This question about &lt;a href=&#34;../../../pgsql/pgloader.html&#34;&gt;pgloader&lt;/a&gt; usage coms in
quite frequently, and I think the
examples &lt;a href=&#34;https://github.com/dimitri/pgloader/tree/master/examples&#34;&gt;README&lt;/a&gt;
goes a long way in answering it. It&amp;rsquo;s not exactly a &lt;em&gt;tutorial&lt;/em&gt; but is almost
there.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Import fixed width data with pgloader</title>
      <link>https://tapoueh.org/blog/2010/04/import-fixed-width-data-with-pgloader/</link>
      <pubDate>Tue, 27 Apr 2010 12:01:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2010/04/import-fixed-width-data-with-pgloader/</guid>
      <description>&lt;p&gt;So, following previous blog entries about importing
&lt;em&gt;fixed width&lt;/em&gt; data, from
&lt;a href=&#34;http://www.postgresonline.com/journal/index.php?/archives/157-Import-fixed-width-data-into-PostgreSQL-with-just-PSQL.html&#34;&gt;Postgres Online Journal&lt;/a&gt; and
&lt;a href=&#34;http://people.planetpostgresql.org/dfetter/index.php?/archives/58-psql,-Paste,-Perl-Pefficiency!.html&#34;&gt;David (perl) Fetter&lt;/a&gt;, I couldn&amp;rsquo;t resist following
the meme and showing how to achieve the same thing with
&lt;a href=&#34;http://pgloader.projects.postgresql.org/#toc9&#34;&gt;pgloader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgloader activity report</title>
      <link>https://tapoueh.org/blog/2010/04/pgloader-activity-report/</link>
      <pubDate>Tue, 06 Apr 2010 09:10:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2010/04/pgloader-activity-report/</guid>
      <description>&lt;p&gt;Yes. This
&lt;a href=&#34;http://pgloader.projects.postgresql.org/&#34;&gt;pgloader&lt;/a&gt; project is still maintained and somewhat
active. Development happens when I receive a complaint, either about a bug
in existing code or a feature in yet-to-write code. If you have a bug to
report, just send me an email!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prefix 1.0.0</title>
      <link>https://tapoueh.org/blog/2009/10/prefix-1.0.0/</link>
      <pubDate>Tue, 06 Oct 2009 15:56:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/10/prefix-1.0.0/</guid>
      <description>So there it is, at long last, the final 1.0.0 release of prefix! It&amp;rsquo;s on its way into the debian repository (targetting sid, in testing in 10 days) and available on pgfoundry to.
In order to make it clear that I intend to maintain this version, the number has 3 digits rather than 2&amp;hellip; which is also what PostgreSQL users will expect.
The only last minute change is that you can now use the first version of the two following rather than the second one:</description>
    </item>
    
  </channel>
</rss>