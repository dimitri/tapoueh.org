<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>http://tapoueh.org/tags/backup/</link>
    <description>Recent content in Backup on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Mar 2011 15:30:00 +0200</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>towards pg_staging 1.0</title>
      <link>http://tapoueh.org/blog/2011/03/towards-pg_staging-1.0/</link>
      <pubDate>Tue, 29 Mar 2011 15:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/03/towards-pg_staging-1.0/</guid>
      <description>If you don&amp;rsquo;t remember about what pg_staging is all about, it&amp;rsquo;s a central console from where to control all your PostgreSQL databases. Typically you use it to manage your development and pre-production setup, where developers ask you pretty often to install them some newer dump from the production, and you want that operation streamlined and easy.
Usage The typical session would be something like this:
pg_staging&amp;gt; databases foodb.dev foodb foodb_20100824 :5432 foodb_20100209 foodb_20100209 :5432 foodb_20100824 foodb_20100824 :5432 pgbouncer pgbouncer :6432 postgres postgres :5432 pg_staging&amp;gt; dbsizes foodb.</description>
    </item>
    
    <item>
      <title>pg_basebackup</title>
      <link>http://tapoueh.org/blog/2010/11/pg_basebackup/</link>
      <pubDate>Sun, 07 Nov 2010 13:45:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/11/pg_basebackup/</guid>
      <description>Hannu just gave me a good idea in this email on -hackers, proposing that pg_basebackup should get the xlog files again and again in a loop for the whole duration of the base backup. That&amp;rsquo;s now done in the aforementioned tool, whose options got a little more useful now:
Usage: pg_basebackup.py [-v] [-f] [-j jobs] &amp;quot;dsn&amp;quot; dest Options: -h, --help show this help message and exit --version show version and quit -x, --pg_xlog backup the pg_xlog files -v, --verbose be verbose and about processing progress -d, --debug show debug information, including SQL queries -f, --force remove destination directory if it exists -j JOBS, --jobs=JOBS how many helper jobs to launch -D DELAY, --delay=DELAY pg_xlog subprocess loop delay, see -x -S, --slave auxilliary process --stdin get list of files to backup from stdin  Yeah, as implementing the xlog idea required having some kind of parallelism, I built on it and the script now has a --jobs option for you to setup how many processes to launch in parallel, all fetching some base backup files in its own standard ( libpq) PostgreSQL connection, in compressed chunks of 8 MB (so that&amp;rsquo;s not 8 MB chunks sent over).</description>
    </item>
    
    <item>
      <title>Introducing Extensions</title>
      <link>http://tapoueh.org/blog/2010/10/introducing-extensions/</link>
      <pubDate>Thu, 21 Oct 2010 13:45:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/introducing-extensions/</guid>
      <description>After reading Simon&amp;rsquo;s blog post, I can&amp;rsquo;t help but try to give some details about what it is exactly that I&amp;rsquo;m working on. As he said, there are several aspects to extensions in PostgreSQL, it all begins here: Chapter 35. Extending SQL.
It&amp;rsquo;s possible, and mostly simple enough, to add your own code or behavior to PostgreSQL, so that it will use your code and your semantics while solving user queries.</description>
    </item>
    
    <item>
      <title>Extensions: writing a patch for PostgreSQL</title>
      <link>http://tapoueh.org/blog/2010/10/extensions-writing-a-patch-for-postgresql/</link>
      <pubDate>Fri, 15 Oct 2010 11:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/extensions-writing-a-patch-for-postgresql/</guid>
      <description>These days, thanks to my community oriented job, I&amp;rsquo;m working full time on a PostgreSQL patch to terminate basic support for extending SQL. First thing I want to share is that patching the backend code is not as hard as one would think. Second one is that git really is helping.
“Not as hard as one would think, are you kidding me?”, I hear some say. Well, that&amp;rsquo;s true. It&amp;rsquo;s C code in there, but with a very good layer of abstractions so that you&amp;rsquo;re not dealing with subtle problems that much.</description>
    </item>
    
    <item>
      <title>Back from PgCon2010</title>
      <link>http://tapoueh.org/blog/2010/05/back-from-pgcon2010/</link>
      <pubDate>Thu, 27 May 2010 14:26:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/05/back-from-pgcon2010/</guid>
      <description>This year&amp;rsquo;s edition has been the best pgcon ever for me. Granted, it&amp;rsquo;s only my third time, but still :) As Josh said the &amp;ldquo;Hall Track&amp;rdquo; in particular was very good, and the Dev Meeting has been very effective!
Extensions This time I prepared some slides to present the extension design and I tried hard to make it so that we get to agree on a plan, even recognizing it&amp;rsquo;s not solving all of our problems from the get go.</description>
    </item>
    
    <item>
      <title>Yet Another PostgreSQL tool hits debian</title>
      <link>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</link>
      <pubDate>Wed, 25 Nov 2009 11:49:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</guid>
      <description>So there it is, this newer contribution of mine that I presented at PGDay is now in debian NEW queue. pg_staging will empower you with respect to what you do about those nightly backups ( pg_dump -Fc or something).
The tool provides a lot of commands to either dump or restore a database. It comes with documentation covering about it all, except for the londiste support part, which will be there in time for 1.</description>
    </item>
    
    <item>
      <title>PGDay.eu, Paris: it was awesome!</title>
      <link>http://tapoueh.org/blog/2009/11/pgday.eu-paris-it-was-awesome/</link>
      <pubDate>Mon, 09 Nov 2009 09:50:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/11/pgday.eu-paris-it-was-awesome/</guid>
      <description>moment. Lots of attendees, lots of quality talks ( slides are online), good food, great party: all the ingredients were there!
It also was for me the occasion to first talk about this tool I&amp;rsquo;ve been working on for months, called pg_staging, which aims to empower those boring production backups to help maintaining staging environments (for your developers and testers).
All in all such events keep reminding me what it means exactly when we way that one of the greatest things about PostgreSQL is its community.</description>
    </item>
    
  </channel>
</rss>