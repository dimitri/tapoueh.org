<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Dimitri Fontaine, Expert PostgreSQL</title>
    <link>http://tapoueh.org/tags/python/</link>
    <description>Recent content in Python on Dimitri Fontaine, Expert PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Feb 2013 11:17:00 +0100</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Playing with pgloader</title>
      <link>http://tapoueh.org/blog/2013/02/playing-with-pgloader/</link>
      <pubDate>Tue, 12 Feb 2013 11:17:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2013/02/playing-with-pgloader/</guid>
      <description>While making progress with both Event Triggers and Extension Templates, I needed to make a little break. My current keeping sane mental exercise seems to mainly involve using Common Lisp, a programming language that ships with about all the building blocks you need.
Yes, that old language brings so much on the table
When using Common Lisp, you have an awesome interactive development environment where you can redefine function and objects while testing them.</description>
    </item>
    
    <item>
      <title>pgloader: what&#39;s next?</title>
      <link>http://tapoueh.org/blog/2013/01/pgloader-whats-next/</link>
      <pubDate>Mon, 28 Jan 2013 10:48:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2013/01/pgloader-whats-next/</guid>
      <description>pgloader is a tool to help loading data into PostgreSQL, adding some error management to the COPY command. COPY is the fast way of loading data into PostgreSQL and is transaction safe. That means that if a single error appears within your bulk of data, you will have loaded none of it. pgloader will submit the data again in smaller chunks until it&amp;rsquo;s able to isolate the bad from the good, and then the good is loaded in.</description>
    </item>
    
    <item>
      <title>Lost in scope</title>
      <link>http://tapoueh.org/blog/2013/01/lost-in-scope/</link>
      <pubDate>Wed, 09 Jan 2013 11:07:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2013/01/lost-in-scope/</guid>
      <description>Thanks to Mickael on twitter I got to read an article about loosing scope with some common programming languages. As the blog article Lost in scope references functional programming languages and plays with both Javascript and Erlang, I though I had to try it out with Common Lisp too.
Let&amp;rsquo;s have fun with lambda!
So, here we go with a simple Common Lisp attempt. The Lost in scope article begins with defining a very simple function returning a boolean value, only true when it&amp;rsquo;s not monday.</description>
    </item>
    
  </channel>
</rss>