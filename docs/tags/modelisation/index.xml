<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modelisation on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/modelisation/</link>
    <description>Recent content in Modelisation on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jul 2018 10:26:47 +0200</lastBuildDate><atom:link href="https://tapoueh.org/tags/modelisation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modeling for Concurrency</title>
      <link>https://tapoueh.org/blog/2018/07/modeling-for-concurrency/</link>
      <pubDate>Tue, 10 Jul 2018 10:26:47 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/07/modeling-for-concurrency/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s continue to dive in PostgreSQL Concurrency. Last week&amp;rsquo;s article
&lt;a href=&#34;https://tapoueh.org/blog/2018/07/postgresql-concurrency-isolation-and-locking/&#34;&gt;PostgreSQL Concurrency: Isolation and
Locking&lt;/a&gt; was a
primer on PostgreSQL isolation and locking properties and behaviors.&lt;/p&gt;

&lt;p&gt;Today&amp;rsquo;s article takes us a step further and builds on what we did last week,
in particular the database modeling for a &lt;em&gt;tweet&lt;/em&gt; like application. After
having had all the characters from Shakespeare&amp;rsquo;s &lt;em&gt;A Midsummer Night&amp;rsquo;s Dream&lt;/em&gt;
tweet their own lines in our database in &lt;a href=&#34;https://tapoueh.org/blog/2018/06/PostgreSQL-DML.md&#34;&gt;PostgreSQL Concurrency: Data
Modification Language&lt;/a&gt;, it&amp;rsquo;s time for them
to do some actions on the tweets: likes and retweet.&lt;/p&gt;

&lt;p&gt;Of course, we&amp;rsquo;re going to put concurrency to the test, so we&amp;rsquo;re going to
have to handle very very popular tweets from the play!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Database Normalization and Primary Keys</title>
      <link>https://tapoueh.org/blog/2018/03/database-normalization-and-primary-keys/</link>
      <pubDate>Fri, 09 Mar 2018 18:41:33 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/03/database-normalization-and-primary-keys/</guid>
      <description>&lt;p&gt;In our previous article we saw three classic &lt;a href=&#34;https://tapoueh.org/blog/2018/03/database-modelization-anti-patterns/&#34;&gt;Database Modelization
Anti-Patterns&lt;/a&gt;. The
article also contains a reference to a Primary Key section of my book &lt;a href=&#34;https://theartofpostgresql.com&#34;&gt;The
Art of PostgresQL&lt;/a&gt;, so it&amp;rsquo;s only fair that I
would now publish said Primary Key section!&lt;/p&gt;

&lt;p&gt;So in this article, we dive into Primary Keys as being a cornerstone of
database normalization. It&amp;rsquo;s so important to get Primary Keys right that you
would think everybody knows how to do it, and yet, most of the primary key
constraints I&amp;rsquo;ve seen used in database design are actually not primary keys
at all.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Database Modelization Anti-Patterns</title>
      <link>https://tapoueh.org/blog/2018/03/database-modelization-anti-patterns/</link>
      <pubDate>Thu, 08 Mar 2018 18:00:43 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/03/database-modelization-anti-patterns/</guid>
      <description>&lt;p&gt;Next week we see two awesome PostgreSQL conferences in Europe, back to back,
with a day in between just so that people may attend both! In chronological
order we have first &lt;a href=&#34;https://2018.nordicpgday.org&#34;&gt;Nordic pgDay&lt;/a&gt; in Oslo
where I will have the pleasure to talk about &lt;a href=&#34;https://www.postgresql.eu/events/nordicpgday2018/schedule/session/1896-data-modeling-normalization-and-denormalization/&#34;&gt;Data Modeling, Normalization
and
Denormalization&lt;/a&gt;.
Then we have &lt;a href=&#34;https://2018.pgday.paris&#34;&gt;pgday.paris&lt;/a&gt; with an awesome
schedule and a strong focus on the needs of application developers!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
