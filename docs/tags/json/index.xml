<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>http://tapoueh.org/tags/json/</link>
    <description>Recent content in Json on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Sep 2017 10:49:03 +0200</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>on Json and SQL</title>
      <link>http://tapoueh.org/blog/2017/09/on-json-and-sql/</link>
      <pubDate>Mon, 18 Sep 2017 10:49:03 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2017/09/on-json-and-sql/</guid>
      <description>&lt;p&gt;PostgreSQL has had proper
&lt;a href=&#34;https://www.postgresql.org/docs/current/static/datatype-json.html&#34;&gt;json&lt;/a&gt;
support for a while now. The unique extensibility approach of the PostgreSQL
system allows it to enable native &lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-json.html&#34;&gt;SQL friendly JSON
processing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this article we&amp;rsquo;ll play with the &lt;a href=&#34;https://mtgjson.com&#34;&gt;Magic: the Gathering card data in JSON
format&lt;/a&gt; data set, provided with a
&lt;a href=&#34;https://creativecommons.org/choose/zero/&#34;&gt;CC0&lt;/a&gt; licence, and process the
information provided. We also see how to normalize a JSON document into a
proper database model that benefits from some PostgreSQL advanced features,
and how to then inject the JSON documents into the normalized database
schema. Finally, we compare some non-trivial processing done against both
versions of the database schema.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>