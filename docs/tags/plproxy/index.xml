<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plproxy on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/plproxy/</link>
    <description>Recent content in plproxy on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Oct 2013 11:25:00 +0200</lastBuildDate><atom:link href="https://tapoueh.org/tags/plproxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PostgreSQL Autonomous Transaction</title>
      <link>https://tapoueh.org/blog/2013/10/postgresql-autonomous-transaction/</link>
      <pubDate>Mon, 14 Oct 2013 11:25:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2013/10/postgresql-autonomous-transaction/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; is an all round impressive
&lt;em&gt;Relational DataBase Management System&lt;/em&gt;
which implements the SQL standard (see the very useful reference page
&lt;a href=&#34;http://troels.arvin.dk/db/rdbms/&#34;&gt;Comparison of different SQL implementations&lt;/a&gt; for details). PostgreSQL also
provides with unique solutions in the database market and has been leading
innovation for some years now. Still, there&amp;rsquo;s no support for
&lt;strong&gt;&lt;em&gt;Autonomous
Transactions&lt;/em&gt;&lt;/strong&gt; within the server itself. Let&amp;rsquo;s have a look at how to easily
implement them with
&lt;a href=&#34;http://wiki.postgresql.org/wiki/PL/Proxy&#34;&gt;PL/Proxy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scaling Stored Procedures</title>
      <link>https://tapoueh.org/blog/2011/10/scaling-stored-procedures/</link>
      <pubDate>Thu, 06 Oct 2011 18:23:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/10/scaling-stored-procedures/</guid>
      <description>In the news recently stored procedures where used as an excuse for moving away logic from the database layer to application layer, and to migrate away from a powerful technology to a simpler one, now that there&amp;rsquo;s no logic anymore in the database.
It&amp;rsquo;s not the way I would typically approach scaling problems, and apparently I&amp;rsquo;m not alone on the Stored Procedures camp. Did you read this nice blog post Mythbusters: Stored Procedures Edition already?</description>
    </item>
    
  </channel>
</rss>
