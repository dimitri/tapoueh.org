<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Restore on Dimitri Fontaine, Expert PostgreSQL</title>
    <link>http://tapoueh.org/tags/restore/</link>
    <description>Recent content in Restore on Dimitri Fontaine, Expert PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Aug 2011 18:05:00 +0200</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/restore/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pg_restore -L &amp; pg_staging</title>
      <link>http://tapoueh.org/blog/2011/08/pg_restore--l--pg_staging/</link>
      <pubDate>Mon, 29 Aug 2011 18:05:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/08/pg_restore--l--pg_staging/</guid>
      <description>On the PostgreSQL Hackers mailing lists, Andrew Dunstan just proposed some new options for pg_dump and pg_restore to ease our lives. One of the answers was talking about some scripts available to exploit the pg_restore listing that you play with using options -l and -L, or the long name versions --list and --use-list. The pg_staging tool allows you to easily exploit those lists too.
The pg_restore list is just a listing of one object per line of all objects contained into a custom dump, that is one made with pg_dump -Fc.</description>
    </item>
    
    <item>
      <title>Some notes about Skytools3</title>
      <link>http://tapoueh.org/blog/2011/04/some-notes-about-skytools3/</link>
      <pubDate>Mon, 11 Apr 2011 11:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/04/some-notes-about-skytools3/</guid>
      <description>I&amp;rsquo;ve been working on skytools3 packaging lately. I&amp;rsquo;ve been pushing quite a lot of work into it, in order to have exactly what I needed out of the box, after some 3 years of production and experiences with the products. Plural, yes, because even if pgbouncer and plproxy are siblings to the projets (same developers team, separate life cycle and releases), then skytools still includes several sub-projects.
Here&amp;rsquo;s what the skytools3 packaging is going to look like:</description>
    </item>
    
    <item>
      <title>towards pg_staging 1.0</title>
      <link>http://tapoueh.org/blog/2011/03/towards-pg_staging-1.0/</link>
      <pubDate>Tue, 29 Mar 2011 15:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/03/towards-pg_staging-1.0/</guid>
      <description>If you don&amp;rsquo;t remember about what pg_staging is all about, it&amp;rsquo;s a central console from where to control all your PostgreSQL databases. Typically you use it to manage your development and pre-production setup, where developers ask you pretty often to install them some newer dump from the production, and you want that operation streamlined and easy.
Usage The typical session would be something like this:
pg_staging&amp;gt; databases foodb.dev foodb foodb_20100824 :5432 foodb_20100209 foodb_20100209 :5432 foodb_20100824 foodb_20100824 :5432 pgbouncer pgbouncer :6432 postgres postgres :5432 pg_staging&amp;gt; dbsizes foodb.</description>
    </item>
    
    <item>
      <title>desktop-mode and readahead</title>
      <link>http://tapoueh.org/blog/2011/02/desktop-mode-and-readahead/</link>
      <pubDate>Wed, 23 Feb 2011 16:45:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/02/desktop-mode-and-readahead/</guid>
      <description>I&amp;rsquo;m using Desktop Save Mode so that Emacs knows to open again all the buffers I&amp;rsquo;ve been using. That goes quite well with how often I start Emacs, that is once a week or once a month. Now, M-x ibuffer last line is as following:
718 buffers 19838205 668 files, 15 processes  That means that at startup, Emacs will load that many files. In order not to have to wait until it&amp;rsquo;s done doing so, I&amp;rsquo;ve setup things this way:</description>
    </item>
    
    <item>
      <title>Introducing Extensions</title>
      <link>http://tapoueh.org/blog/2010/10/introducing-extensions/</link>
      <pubDate>Thu, 21 Oct 2010 13:45:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/introducing-extensions/</guid>
      <description>After reading Simon&amp;rsquo;s blog post, I can&amp;rsquo;t help but try to give some details about what it is exactly that I&amp;rsquo;m working on. As he said, there are several aspects to extensions in PostgreSQL, it all begins here: Chapter 35. Extending SQL.
It&amp;rsquo;s possible, and mostly simple enough, to add your own code or behavior to PostgreSQL, so that it will use your code and your semantics while solving user queries.</description>
    </item>
    
    <item>
      <title>Back from PgCon2010</title>
      <link>http://tapoueh.org/blog/2010/05/back-from-pgcon2010/</link>
      <pubDate>Thu, 27 May 2010 14:26:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/05/back-from-pgcon2010/</guid>
      <description>This year&amp;rsquo;s edition has been the best pgcon ever for me. Granted, it&amp;rsquo;s only my third time, but still :) As Josh said the &amp;ldquo;Hall Track&amp;rdquo; in particular was very good, and the Dev Meeting has been very effective!
Extensions This time I prepared some slides to present the extension design and I tried hard to make it so that we get to agree on a plan, even recognizing it&amp;rsquo;s not solving all of our problems from the get go.</description>
    </item>
    
    <item>
      <title>Yet Another PostgreSQL tool hits debian</title>
      <link>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</link>
      <pubDate>Wed, 25 Nov 2009 11:49:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2009/11/yet-another-postgresql-tool-hits-debian/</guid>
      <description>So there it is, this newer contribution of mine that I presented at PGDay is now in debian NEW queue. pg_staging will empower you with respect to what you do about those nightly backups ( pg_dump -Fc or something).
The tool provides a lot of commands to either dump or restore a database. It comes with documentation covering about it all, except for the londiste support part, which will be there in time for 1.</description>
    </item>
    
  </channel>
</rss>