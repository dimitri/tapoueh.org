<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prefix on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/prefix/</link>
    <description>Recent content in prefix on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 May 2011 17:30:00 +0200</lastBuildDate><atom:link href="https://tapoueh.org/tags/prefix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extension module_pathname and .sql.in</title>
      <link>https://tapoueh.org/blog/2011/05/extension-module_pathname-and-.sql.in/</link>
      <pubDate>Mon, 02 May 2011 17:30:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2011/05/extension-module_pathname-and-.sql.in/</guid>
      <description>While currently too busy at work to deliver much Open Source contributions, let&amp;rsquo;s debunk an old habit of PostgreSQL extension authors. It&amp;rsquo;s all down to copy pasting from contrib, and there&amp;rsquo;s no reason to continue doing $libdir this way ever since 7.4 days.
Let&amp;rsquo;s take an example here, with the prefix extension. This one too will need some love, but is still behind on my spare time todo list, sorry about that.</description>
    </item>
    
    <item>
      <title>Introducing Extensions</title>
      <link>https://tapoueh.org/blog/2010/10/introducing-extensions/</link>
      <pubDate>Thu, 21 Oct 2010 13:45:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2010/10/introducing-extensions/</guid>
      <description>After reading Simon&amp;rsquo;s blog post, I can&amp;rsquo;t help but try to give some details about what it is exactly that I&amp;rsquo;m working on. As he said, there are several aspects to extensions in PostgreSQL, it all begins here: Chapter 35. Extending SQL.
It&amp;rsquo;s possible, and mostly simple enough, to add your own code or behavior to PostgreSQL, so that it will use your code and your semantics while solving user queries.</description>
    </item>
    
    <item>
      <title>debian packaging PostgreSQL extensions</title>
      <link>https://tapoueh.org/blog/2010/08/debian-packaging-postgresql-extensions/</link>
      <pubDate>Fri, 06 Aug 2010 13:00:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2010/08/debian-packaging-postgresql-extensions/</guid>
      <description>In trying to help an extension debian packaging effort, I&amp;rsquo;ve once again proposed to handle it. That&amp;rsquo;s because I now begin to know how to do it, as you can see in my package overview page at debian QA facility. There&amp;rsquo;s a reason why I proposed myself here, it&amp;rsquo;s that yet another tool of mine is now to be found in debian, and should greatly help extension packaging there. You can already check for the postgresql-server-dev-all package page if you&amp;rsquo;re that impatient!</description>
    </item>
    
    <item>
      <title>pgloader activity report</title>
      <link>https://tapoueh.org/blog/2010/04/pgloader-activity-report/</link>
      <pubDate>Tue, 06 Apr 2010 09:10:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2010/04/pgloader-activity-report/</guid>
      <description>&lt;p&gt;Yes. This
&lt;a href=&#34;http://pgloader.projects.postgresql.org/&#34;&gt;pgloader&lt;/a&gt; project is still maintained and somewhat
active. Development happens when I receive a complaint, either about a bug
in existing code or a feature in yet-to-write code. If you have a bug to
report, just send me an email!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prefix 1.1.0</title>
      <link>https://tapoueh.org/blog/2009/11/prefix-1.1.0/</link>
      <pubDate>Mon, 30 Nov 2009 12:10:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/11/prefix-1.1.0/</guid>
      <description>So I had two bug reports about prefix in less than a week. It means several things, one of them is that my code is getting used in the wild, which is nice. The other side of the coin is that people do find bugs in there. This one is about the behavior of the btree opclass of the type prefix range. We cheat a lot there by simply having written one, because a range does not have a strict ordering: is [1-3] before of after [2-4]?</description>
    </item>
    
    <item>
      <title>prefix 1.0.0</title>
      <link>https://tapoueh.org/blog/2009/10/prefix-1.0.0/</link>
      <pubDate>Tue, 06 Oct 2009 15:56:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/10/prefix-1.0.0/</guid>
      <description>So there it is, at long last, the final 1.0.0 release of prefix! It&amp;rsquo;s on its way into the debian repository (targetting sid, in testing in 10 days) and available on pgfoundry to.
In order to make it clear that I intend to maintain this version, the number has 3 digits rather than 2&amp;hellip; which is also what PostgreSQL users will expect.
The only last minute change is that you can now use the first version of the two following rather than the second one:</description>
    </item>
    
    <item>
      <title>Escreen integration</title>
      <link>https://tapoueh.org/blog/2009/09/escreen-integration/</link>
      <pubDate>Tue, 22 Sep 2009 23:04:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/09/escreen-integration/</guid>
      <description>After having used elscreen for a long time, I&amp;rsquo;m now a very happy user of escreen, which feels much better integrated and allows to have one ring of recently visited buffers per screen. Which is what you need when using a screen like feature, really.
At first, it seemed so good as not to require any tweaking, but soon enough I had to adapt it to my workflow. After all that&amp;rsquo;s exactly for being able to do this that I&amp;rsquo;m using emacs :)</description>
    </item>
    
    <item>
      <title>Follow-up on dim:mailrc-add-entry</title>
      <link>https://tapoueh.org/blog/2009/09/follow-up-on-dimmailrc-add-entry/</link>
      <pubDate>Mon, 07 Sep 2009 12:50:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/09/follow-up-on-dimmailrc-add-entry/</guid>
      <description>The function didn&amp;rsquo;t allow for using more than one mailrc file, which isn&amp;rsquo;t a good idea, so I&amp;rsquo;ve just added that. Oh and for gnus integration what I need is (add-hook &#39;message-mode-hook &#39;mail-abbrevs-setup) it seems&amp;hellip; so that if I type the alias it&amp;rsquo;ll get automatically expanded. And to be real lazy and avoid having to type in the entire alias, mail-abbrev-complete-alias to the rescue, assigned to some easy to reach keys.</description>
    </item>
    
    <item>
      <title>Improving ~/.mailrc usage</title>
      <link>https://tapoueh.org/blog/2009/09/improving-~/.mailrc-usage/</link>
      <pubDate>Mon, 07 Sep 2009 01:29:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/09/improving-~/.mailrc-usage/</guid>
      <description>So I&amp;rsquo;ve been adviced to use ~/.mailrc for keeping a basic address book in Emacs, for use within gnus for example. I had to resort to the manual to find out how to use the file aliases when I need them, that is when composing a mail. For the record, here&amp;rsquo;s what I had to do:
;; mails and aliases (add-hook &amp;#39;mail-mode-hook &amp;#39;mail-abbrevs-setup) (global-set-key (kbd &amp;#34;C-c @&amp;#34;) &amp;#39;mail-abbrev-insert-alias) That means I prefer hitting C-c @, then typing the alias in the minibuffer (with completion) and there after see the full mail address in my message-mode buffer.</description>
    </item>
    
    <item>
      <title>hstore-new &amp; preprepare reach debian too</title>
      <link>https://tapoueh.org/blog/2009/08/hstore-new-preprepare-reach-debian-too/</link>
      <pubDate>Tue, 18 Aug 2009 09:14:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/08/hstore-new-preprepare-reach-debian-too/</guid>
      <description>It seems like debian developers are back from annual conference and holiday, so they have had a look at the NEW queue and processed the packages in there. Two of them were mines and waiting to get in unstable, hstore-new and preprepare.
Time to do some bug fixing already, as hstore-new packaging is using a bash&amp;rsquo;ism I shouldn&amp;rsquo;t rely on (or so the debian buildfarm is telling me) and for preprepare I was waiting for inclusion before to go improving the GUC management, stealing some code from Selena&amp;rsquo;s pgGearman :)</description>
    </item>
    
    <item>
      <title>prefix 1.0~rc2 in debian testing</title>
      <link>https://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</link>
      <pubDate>Mon, 03 Aug 2009 14:50:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/08/prefix-1.0~rc2-in-debian-testing/</guid>
      <description>At long last, here it is. With binary versions both for postgresal-8.3 and postgresal-8.4! Unfortunately my other packaging efforts are still waiting on the NEW queue, but I hope to soon see hstore-new and preprepare enter debian too.
Anyway, the plan for prefix is to now wait something like 2 weeks, then, baring showstopper bugs, release the 1.0 final version. If you have a use for it, now is the good time for testing it!</description>
    </item>
    
    <item>
      <title>prefix 1.0~rc2-1</title>
      <link>https://tapoueh.org/blog/2009/07/prefix-1.0~rc2-1/</link>
      <pubDate>Thu, 09 Jul 2009 12:48:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/07/prefix-1.0~rc2-1/</guid>
      <description>I&amp;rsquo;ve been having problem with building both postgresql-8.3-prefix and postgresql-8.4-prefix debian packages from the same source package, and fixing the packaging issue forced me into modifying the main prefix Makefile. So while reaching rc2, I tried to think about missing pieces easy to add this late in the game: and there&amp;rsquo;s one, that&amp;rsquo;s a function length(prefix_range), so that you don&amp;rsquo;t have to cast to text no more in the following wildspread query:</description>
    </item>
    
    <item>
      <title>prefix extension reaches 1.0 (rc1)</title>
      <link>https://tapoueh.org/blog/2009/06/prefix-extension-reaches-1.0-rc1/</link>
      <pubDate>Tue, 23 Jun 2009 10:53:00 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/06/prefix-extension-reaches-1.0-rc1/</guid>
      <description>At long last, after millions and millions of queries just here at work and some more in other places, the prefix project is reaching 1.0 milestone. The release candidate is getting uploaded into debian at the moment of this writing, and available at the following place: prefix-1.0~rc1.tar.gz.
If you have any use for it (as some VoIP companies have already), please consider testing it, in order for me to release a shiny 1.</description>
    </item>
    
    <item>
      <title>Prefix GiST index now in 8.1</title>
      <link>https://tapoueh.org/blog/2009/02/prefix-gist-index-now-in-8.1/</link>
      <pubDate>Tue, 10 Feb 2009 00:00:00 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2009/02/prefix-gist-index-now-in-8.1/</guid>
      <description>The prefix project is about matching a literal against prefixes in your table, the typical example being a telecom routing table. Thanks to the excellent work around generic indexes in PostgreSQL with GiST, indexing prefix matches is easy to support in an external module. Which is what the prefix extension is all about.
Maybe you didn&amp;rsquo;t come across this project before, so here&amp;rsquo;s the typical query you want to run to benefit from the special indexing, where the @&amp;gt; operator is read contains or is a prefix of:</description>
    </item>
    
  </channel>
</rss>
