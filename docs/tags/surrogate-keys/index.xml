<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Surrogate Keys on The Art of PostgreSQL</title>
    <link>https://tapoueh.org/tags/surrogate-keys/</link>
    <description>Recent content in Surrogate Keys on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Mar 2018 18:41:33 +0100</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/surrogate-keys/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database Normalization and Primary Keys</title>
      <link>https://tapoueh.org/blog/2018/03/database-normalization-and-primary-keys/</link>
      <pubDate>Fri, 09 Mar 2018 18:41:33 +0100</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/03/database-normalization-and-primary-keys/</guid>
      <description>&lt;p&gt;In our previous article we saw three classic &lt;a href=&#34;https://tapoueh.org/blog/2018/03/database-modelization-anti-patterns/&#34;&gt;Database Modelization
Anti-Patterns&lt;/a&gt;. The
article also contains a reference to a Primary Key section of my book
&lt;a href=&#34;https://masteringpostgresql.com&#34;&gt;Mastering PostgreSQL in Application
Development&lt;/a&gt;, so it&amp;rsquo;s only fair that I
would now publish said Primary Key section!&lt;/p&gt;

&lt;p&gt;So in this article, we dive into Primary Keys as being a cornerstone of
database normalization. It&amp;rsquo;s so important to get Primary Keys right that you
would think everybody knows how to do it, and yet, most of the primary key
constraints I&amp;rsquo;ve seen used in database design are actually not primary keys
at all.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>