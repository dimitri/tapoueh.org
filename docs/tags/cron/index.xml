<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cron on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>https://tapoueh.org/tags/cron/</link>
    <description>Recent content in Cron on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Aug 2018 11:24:25 +0200</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/cron/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scheduled Data Processing: How to use cron?</title>
      <link>https://tapoueh.org/blog/2018/08/scheduled-data-processing-how-to-use-cron/</link>
      <pubDate>Wed, 01 Aug 2018 11:24:25 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2018/08/scheduled-data-processing-how-to-use-cron/</guid>
      <description>&lt;p&gt;A previous article in the &lt;a href=&#34;https://tapoueh.org/tags/concurrency&#34;&gt;PostgreSQL Concurrency&lt;/a&gt; series
covered how to manage concurrent retweets in an efficient way: in &lt;a href=&#34;https://tapoueh.org/blog/2018/07/computing-and-caching/&#34;&gt;Computing
and Caching&lt;/a&gt;, we learnt how to
maintain a cache right in your PostgreSQL database, using MATERIALIZED
VIEWS. We also had a look at how to take care of &lt;a href=&#34;https://tapoueh.org/blog/2018/07/batch-updates-and-concurrency/&#34;&gt;Batch Updates and
Concurrency&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While in the first case we are providing a solution to a technical problem
where we want to solve performance issues while keeping the same semantics,
in the second case we are actually implementing a part of the application&amp;rsquo;s
&lt;a href=&#34;https://tapoueh.org/blog/2017/06/sql-and-business-logic/&#34;&gt;Business Logic&lt;/a&gt; as a scheduled job.&lt;/p&gt;

&lt;p&gt;Today&amp;rsquo;s article shows a modern technique to handle the scheduling of those
business oriented activities that are not tied to any user activity. When
thinking about it this way, you certainly don&amp;rsquo;t want to implement the
backbone of your business logic in a &lt;em&gt;shell script&lt;/em&gt; that&amp;rsquo;s directly
maintained in the production environment, do you?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>