<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anosql on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>https://tapoueh.org/tags/anosql/</link>
    <description>Recent content in Anosql on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2017 13:30:19 +0200</lastBuildDate>
    
	<atom:link href="https://tapoueh.org/tags/anosql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL and Business Logic</title>
      <link>https://tapoueh.org/blog/2017/06/sql-and-business-logic/</link>
      <pubDate>Mon, 19 Jun 2017 13:30:19 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2017/06/sql-and-business-logic/</guid>
      <description>&lt;p&gt;Business logic is &lt;em&gt;supposed to be&lt;/em&gt; the part of the application where you
deal with customer or user facing decisions and computations. It is often
argued that this part should be well separated from the rest of the
technical infrastructure of your code. Of course, SQL and relational
database design is meant to support your business cases (or user stories),
so then we can ask ourselves if SQL should be part of your business logic
implementation. Or actually, how much of your business logic should be SQL?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Write SQL</title>
      <link>https://tapoueh.org/blog/2017/06/how-to-write-sql/</link>
      <pubDate>Thu, 08 Jun 2017 13:23:26 +0200</pubDate>
      
      <guid>https://tapoueh.org/blog/2017/06/how-to-write-sql/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/krisajenkins&#34;&gt;Kris Jenkins&lt;/a&gt; cooked up a very nice way
to embed SQL in your
code: &lt;a href=&#34;https://github.com/krisajenkins/yesql&#34;&gt;YeSQL for Clojure&lt;/a&gt;. The main
idea is that you should be writing your SQL queries in &lt;code&gt;.sql&lt;/code&gt; files in your
code repository and maintain them there.&lt;/p&gt;

&lt;p&gt;The idea is very good and it is now possible to find alternative
implementations of the &lt;a href=&#34;https://clojure.org&#34;&gt;Clojure&lt;/a&gt; &lt;em&gt;yesql&lt;/em&gt; library in
other languages. Today, we are going to have a look at one of them for
the &lt;a href=&#34;https://www.python.org&#34;&gt;python&lt;/a&gt; programming
language: &lt;a href=&#34;https://github.com/honza/anosql&#34;&gt;anosql&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>