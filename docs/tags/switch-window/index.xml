<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Switch Window on Dimitri Fontaine, PostgreSQL Expert</title>
    <link>http://tapoueh.org/tags/switch-window/</link>
    <description>Recent content in Switch Window on Dimitri Fontaine, PostgreSQL Expert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Apr 2011 21:30:00 +0200</lastBuildDate>
    
	<atom:link href="http://tapoueh.org/tags/switch-window/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Emacs Kicker</title>
      <link>http://tapoueh.org/blog/2011/04/emacs-kicker/</link>
      <pubDate>Fri, 15 Apr 2011 21:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/04/emacs-kicker/</guid>
      <description>Following up on the very popular emacs-starter-kit, I&amp;rsquo;m now proposing the emacs-kicker. It&amp;rsquo;s about the .emacs file you&amp;rsquo;ve seen in older posts here, which I maintain for some colleagues. After all, if they find it useful, some more people might to, so I&amp;rsquo;ve decided to publish it.
What you&amp;rsquo;ll find is a very simple 128 lines Emacs user init file, based on el-get for external packages. A not so random selection of those is used, here&amp;rsquo;s the list when you hide some details:</description>
    </item>
    
    <item>
      <title>Starting afresh with el-get</title>
      <link>http://tapoueh.org/blog/2011/01/starting-afresh-with-el-get/</link>
      <pubDate>Tue, 11 Jan 2011 16:20:00 +0100</pubDate>
      
      <guid>http://tapoueh.org/blog/2011/01/starting-afresh-with-el-get/</guid>
      <description>It so happens that a colleague of mine wanted to start using Emacs but couldn&amp;rsquo;t get to it. He insists on having proper color themes in all applications and some sensible defaults full of nifty add-ons everywhere, and didn&amp;rsquo;t want to have to learn that much about Emacs and Emacs Lisp to get started. I&amp;rsquo;m not even sure that he will Take the Emacs tour.
You would tell me that there&amp;rsquo;s nothing we can do for so unfriendly users.</description>
    </item>
    
    <item>
      <title>el-get reaches 1.0</title>
      <link>http://tapoueh.org/blog/2010/10/el-get-reaches-1.0/</link>
      <pubDate>Thu, 07 Oct 2010 13:30:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/10/el-get-reaches-1.0/</guid>
      <description>It&amp;rsquo;s been a week since the last commits in the el-get repository, and those were all about fixing and adding recipes, and about notifications. Nothing like core plumbing you see. Also, 0.9 was released on 2010-08-24 and felt pretty complete already, then received lots of improvements. It&amp;rsquo;s high time to cross the line and call it 1.0!
Now existing users will certainly just be moderatly happy to see the tool reach that version number, depending whether they think more about the bugs they want to see fixed (ftp is supported, only called http) and the new features they want to see in ( info documentation) or more about what el-get does for them already today&amp;hellip;</description>
    </item>
    
    <item>
      <title>switch-window reaches 0.8</title>
      <link>http://tapoueh.org/blog/2010/09/switch-window-reaches-0.8/</link>
      <pubDate>Mon, 13 Sep 2010 17:45:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/09/switch-window-reaches-0.8/</guid>
      <description>I wanted to play with the idea of using the whole keyboard for my switch-window utility, but wondered how to get those keys in the right order and all. Finally found quail-keyboard-layout which seems to exists for such uses, as you can see:
(loop with layout = (split-string quail-keyboard-layout &amp;quot;&amp;quot;) for row from 1 to 4 collect (loop for col from 1 to 12 (&amp;quot;q&amp;quot; &amp;quot;w&amp;quot; &amp;quot;e&amp;quot; &amp;quot;r&amp;quot; &amp;quot;t&amp;quot; &amp;quot;y&amp;quot; &amp;quot;u&amp;quot; &amp;quot;i&amp;quot; &amp;quot;o&amp;quot; &amp;quot;p&amp;quot; &amp;quot;[&amp;quot; &amp;quot;]&amp;quot;) (&amp;quot;a&amp;quot; &amp;quot;s&amp;quot; &amp;quot;d&amp;quot; &amp;quot;f&amp;quot; &amp;quot;g&amp;quot; &amp;quot;h&amp;quot; &amp;quot;j&amp;quot; &amp;quot;k&amp;quot; &amp;quot;l&amp;quot; &amp;quot;;&amp;quot; &amp;quot;&#39;&amp;quot; &amp;quot;\\&amp;quot;) (&amp;quot;z&amp;quot; &amp;quot;x&amp;quot; &amp;quot;c&amp;quot; &amp;quot;v&amp;quot; &amp;quot;b&amp;quot; &amp;quot;n&amp;quot; &amp;quot;m&amp;quot; &amp;quot;,&amp;quot; &amp;quot;.</description>
    </item>
    
    <item>
      <title>el-get and dim-switch-window status update</title>
      <link>http://tapoueh.org/blog/2010/08/el-get-and-dim-switch-window-status-update/</link>
      <pubDate>Mon, 09 Aug 2010 15:35:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/08/el-get-and-dim-switch-window-status-update/</guid>
      <description>Thanks to you readers of Planet Emacsen taking the time to try those pieces of emacs lisp found in my blog, and also the time to comment on them, some bugs have been fixed, and new releases appeared.
el-get had some typo kind of bug in its support for apt-get and fink packages, and I managed to break the elpa and http support when going all asynchronous by forgetting to update the call convention I&amp;rsquo;m using.</description>
    </item>
    
    <item>
      <title>dim-switch-window.el: fixes</title>
      <link>http://tapoueh.org/blog/2010/07/dim-switch-window.el-fixes/</link>
      <pubDate>Mon, 26 Jul 2010 11:55:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/07/dim-switch-window.el-fixes/</guid>
      <description>Thanks to amazing readers of planet emacsen, two annoyances of switch-window.el have already been fixed! The first is that handling of C-g isn&amp;rsquo;t exactly an option after all, and the other is that you want to avoid the buffer creation in the simple cases (1 or 2 windows only), because it&amp;rsquo;s the usual case.
I&amp;rsquo;ve received code to handle the second case, that I mostly merged. Thanks a lot guys, the new version is on emacswiki already!</description>
    </item>
    
    <item>
      <title>dim-switch-window.el</title>
      <link>http://tapoueh.org/blog/2010/07/dim-switch-window.el/</link>
      <pubDate>Sun, 25 Jul 2010 13:25:00 +0200</pubDate>
      
      <guid>http://tapoueh.org/blog/2010/07/dim-switch-window.el/</guid>
      <description>So it&amp;rsquo;s Sunday and I&amp;rsquo;m thinking I&amp;rsquo;ll get into el-get sometime later. Now is the time to present dim-switch-window.el which implements a visual C-x o. I know of only one way to present a visual effect, and that&amp;rsquo;s with a screenshot:
So as you can see, it&amp;rsquo;s all about showing a big number in each window, tweaking each window&amp;rsquo;s name, and waiting till the user press one of the expected key â€” or timeout and stay on the same window as before C-x o.</description>
    </item>
    
  </channel>
</rss>