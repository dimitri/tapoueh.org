#author Dimitri Fontaine
#title  PostgreSQL FOSDEM Conference
#date   20140203-10:04
#tags   PostgreSQL FOSDEM Extensions Conferences

Back from the [[https://fosdem.org/2014/][FODESM 2014 Conference]], here's the slides I've been using for
the [[http://www.postgresql.eu/events/schedule/fosdem2014/session/570-advanced-extension-use-cases/][Advanced Extension Use Cases]] talk I gave, based on the ongoing work to
be found under the [[../../../tags/extensions][Tour of Extensions]] index in this web site.

	[[../../../images/confs/Fosdem_2014_Extensions.pdf][../../../images/confs/Fosdem_2014_Extensions.png]]

If you're interested into the talk contents, then you might be interested
into the following list of articles where I actually did all the work
leading to the slides in the above PDF:

<literal>

<div id="content" class="span8">
<div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/10/23-denormalizing-tags'>Denormalizing Tags</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>October, 24 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/10/23-denormalizing-tags'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/wordpres-seo-categories-tags.jpg' /></a></div><div class='span6'><p>In our 
<a href='/tags/extensions'>Tour of Extensions</a> today's article is about advanced tag indexing. We
have a great data collection to play with and our goal today is to be able
to quickly find data matching a complex set of tags. So, let's find out
those 
<a href='http://www.lastfm.fr/'>lastfm</a> tracks that are tagged as 
<em>blues</em> and 
<em>rhythm and blues</em>, for
instance.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/10/14-autonomous-transactions'>PostgreSQL Autonomous Transaction</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>October, 14 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/10/14-autonomous-transactions'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/autonomous-driving.640.jpg' /></a></div><div class='span6'><p><a href='http://www.postgresql.org/'>PostgreSQL</a> is an all round impressive 
<em>Relational DataBase Management System</em>
which implements the SQL standard (see the very useful reference page
<a href='http://troels.arvin.dk/db/rdbms/'>Comparison of different SQL implementations</a> for details). PostgreSQL also
provides with unique solutions in the database market and has been leading
innovation for some years now. Still, there's no support for 
<em><strong>Autonomous
Transactions</strong></em> within the server itself. Let's have a look at how to easily
implement them with 
<a href='http://wiki.postgresql.org/wiki/PL/Proxy'>PL/Proxy</a>.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/10/09-ip4r'>Geolocation with PostgreSQL</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>October, 09 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/10/09-ip4r'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/geolocation.png' /></a></div><div class='span6'><p>Let's get back to our 
<a href='/tags/extensions'>Tour of Extensions</a> that had to be kept aside for
awhile with other concerns such as last chance 
<a href='/blog/2013/09/16-PostgreSQL-data-recovery'>PostgreSQL data recovery</a>. Now
that we have a 
<em>data loading</em> tool up to the task (read about it in the
<a href='/blog/2013/10/01-loading-geolocation-data'>Loading Geolocation Data</a> article) we're going to be able to play with the
awesome 
<a href='https://github.com/RhodiumToad/ip4r'>ip4r</a> extension from 
<a href='http://blog.rhodiumtoad.org.uk/'>RhodiumToad</a>.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/10/03-micro-optimizing-int-to-ip-address'>A Worthwile Micro Optimisation</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>October, 03 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/10/03-micro-optimizing-int-to-ip-address'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/make-computer-faster.jpg' /></a></div><div class='span6'><p>In our previous article about 
<a href='/blog/2013/10/01-loading-geolocation-data'>Loading Geolocation Data</a>, we did load some
data into PostgreSQL and saw the quite noticable impact of a user
transformation. As it happens, the function that did the integer to IP
representation was so naive as to scratch the micro optimisation itch of
some Common Lisp hackers: thanks a lot guys, in particular 
<a href='https://github.com/stassats'>stassats</a> who came
up with the solution we're seeing now.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/10/01-loading-geolocation-data'>Loading Geolocation Data</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>October, 01 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/10/01-loading-geolocation-data'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/lisp-python.png' /></a></div><div class='span6'><p>As I've been mentionning in the past already, I'm currently rewriting
pgloader from scratch in 
<a href='/tags/common-lisp'>Common Lisp</a>. In terms of 
<a href='http://en.wikipedia.org/wiki/Technical_debt'>technical debt</a> that's akin
to declaring 
<em>bankrupcy</em>, which is both sad news and good news as there's
suddenly new hope of doing it right this time.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/09/06-pg_trgm-suggestions'>Using trigrams against typos</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>September, 06 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/09/06-pg_trgm-suggestions'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/trigramme.png' /></a></div><div class='span6'><p>In our ongoing 
<a href='/tags/extensions'>Tour of Extensions</a> we played with 
<a href='http://www.postgresql.org/docs/current/static/earthdistance.html'>earth distance</a> in
<a href='/blog/2013/08/05-earthdistance'>How far is the nearest pub?</a> then with 
<a href='http://www.postgresql.org/docs/current/static/hstore.html'>hstore</a> in a series about trigger,
first to generalize 
<a href='/blog/2013/08/23-parametrized-triggers'>Trigger Parameters</a> then to enable us to
<a href='/blog/2013/08/27-auditing-changes-with-hstore'>Auditing Changes with Hstore</a>. Today we are going to work with 
<a href='http://www.postgresql.org/docs/current/static/pgtrgm.html'>pg_trgm</a> which
is the 
<em>trigrams</em> PostgreSQL extension: its usage got seriously enhanced in
recent PostgreSQL releases and it's now a poor's man 
<a href='http://www.postgresql.org/docs/current/static/textsearch.html'>Full Text Search</a>
engine.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/08/27-auditing-changes-with-hstore'>Auditing Changes with Hstore</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>August, 27 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/08/27-auditing-changes-with-hstore'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/Audit-Conseil.jpg' /></a></div><div class='span6'><p>In a previous article about 
<a href='/blog/2013/08/23-parametrized-triggers'>Trigger Parameters</a> we have been using the
extension 
<a href='http://www.postgresql.org/docs/9.2/static/hstore.html'>hstore</a> in order to compute some extra field in our records, where
the fields used both for the computation and for storing the results were
passed in as 
<em>dynamic parameters</em>. Today we're going to see another 
<em>trigger</em>
use case for 
<em>hstore</em>: we are going to record changes made to our tuples.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/08/23-parametrized-triggers'>Trigger Parameters</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>August, 23 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/08/23-parametrized-triggers'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/dunlop-trigger-84fg-gold.640.jpg' /></a></div><div class='span6'><p>Sometimes you want to compute values automatically at 
<code>INSERT</code> time, like for
example a 
<em>duration</em> column out of a 
<em>start</em> and an 
<em>end</em> column, both
<em>timestamptz</em>. It's easy enough to do with a 
<code>BEFORE TRIGGER</code> on your table.
What's more complex is to come up with a parametrized spelling of the
trigger, where you can attach the same 
<em>stored procedure</em> to any table even
when the column names are different from one another.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/08/05-earthdistance'>How far is the nearest pub?</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>August, 05 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/08/05-earthdistance'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/latitude_and_longitude.jpg' /></a></div><div class='span6'><p>In our recent article about 
<a href='/blog/2013/08/02-pub-names-knn'>The Most Popular Pub Names</a> we did have a look at
how to find the pubs nearby, but didn't compute the 
<strong>distance</strong> in between that
pub and us. That's because how to compute a distance given a position on the
earth expressed as 
<em>longitude</em> and 
<em>latitude</em> is not that easy. Today, we are
going to solve that problem nonetheless, thanks to 
<a href='http://www.postgresql.org/docs/9.2/interactive/extend-extensions.html'>PostgreSQL Extensions</a>.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/08/02-pub-names-knn'>The Most Popular Pub Names</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>August, 02 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/08/02-pub-names-knn'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/openstreetmap.jpg' /></a></div><div class='span6'><p>In his article titled 
<a href='http://blog.mongodb.org/post/56876800071/the-most-popular-pub-names?utm_content=buffer4922c&utm_source=buffer&utm_medium=facebook&utm_campaign=Buffer'>The Most Popular Pub Names</a> 
<em>Ross Lawley</em> did show us how
to perform some quite interesting 
<em>geographic queries</em> against 
<a href='http://www.mongodb.org/'>MongoDB</a>, using
some nice 
<em>Open Data</em> found at the 
<a href='http://www.openstreetmap.org/'>Open Street Map</a> project.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/02/26-hll-union'>HyperLogLog Unions</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>February, 26 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/02/26-hll-union'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/SetOperations.480.png' /></a></div><div class='span6'><p>In the article from yesterday we talked about 
<a href='http://tapoueh.org/blog/2013/02/25-postgresql-hyperloglog.html'>PostgreSQL HyperLogLog</a> with
some details. The real magic of that extension has been skimmed over though,
and needs another very small article all by itself, in case you missed it.
</p></div></div><div class='row'><div class='span2'><p>&nbsp;</p></div><div class='span6'><h2><a href='/blog/2013/02/25-postgresql-hyperloglog'>PostgreSQL HyperLogLog</a></h2><div class='date'><i class='icon-calendar'></i> <span class='date'>February, 25 2013</span></div></div><div class='span2'><a class='thumbnail' href='/blog/2013/02/25-postgresql-hyperloglog'><img class='img-polaroid' style='width: 160px; height: 120px;' src='../../../images/cardinality1.jpg' /></a></div><div class='span6'><p>If you've been following along at home the newer statistics developments,
you might have heard about this new
<a href='http://research.google.com/pubs/pub40671.html'>State of The Art Cardinality Estimation Algorithm</a> called 
<a href='http://metamarkets.com/2012/fast-cheap-and-98-right-cardinality-estimation-for-big-data/'>HyperLogLog</a>. This
technique is now available for PostgreSQL in the extension 
<a href='http://blog.aggregateknowledge.com/2013/02/04/open-source-release-postgresql-hll/'>postgresql-hll</a>
available at 
<a href='https://github.com/aggregateknowledge/postgresql-hll'>https://github.com/aggregateknowledge/postgresql-hll</a> and soon
to be in 
<code>debian</code>.
</p></div></div>
</div>

</literal>
