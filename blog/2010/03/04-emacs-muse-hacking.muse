#author Dimitri Fontaine
#title  Emacs Muse hacking
#date   20100304-13:33
#tags   Emacs Muse

Now you know what piece of software is used to publish this blog. I really
like it, the major mode makes it a great experience to be using this tool,
and the fact that you produce the =HTML= and =rsync= it all from within Emacs
(=C-c C-p= then =C-c C-r= with some easy [[http://git.tapoueh.org/?p=tapoueh.org.git;a=blob;f=dim-muse.el;hb=HEAD][elisp code]]) is a big advantage as far
as I'm concerned. No need to resort to =shell= and =Makefile=.

What's new here is that I missed the *one page per article* trend that other
blog software propose, and the blog entries index too. I didn't want to
invest time into hacking Muse itself, that was my excuse for accepting the
situation. But I finally took a deeper look at the [[http://mwolson.org/static/doc/muse/Style-Elements.html#Style-Elements][Emacs Muse Manual]], and
found out about the =:after= and =:final= functions.

Those two function will get run while in the output buffer, the =HTML=
formatted one. With the =:after= function, it's still possible to edit the
buffer content, for example to add a mini index to previous articles,
whereas with the =:final= function the buffer is =read-only= and already written
to disk, so it's to late to edit it. Still it's possible to cut it in pieces
and write a new file per article you find in there.

The code to realize my wishes is [[http://git.tapoueh.org/?p=tapoueh.org.git;a=summary][available]] but has not been edited with
customisation in mind, so to use it you will have to edit some places rather
than just =setq= some =defcustom=. Well, if I have demand, I'll generalize the
code and share it on [[http://www.emacswiki.org/][Emacs Wiki]] and [[http://tromey.com/elpa/][ELPA]]. Meanwhile, happy hacking!
